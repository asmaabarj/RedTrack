2025-03-11 09:55:45 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-11 09:55:45 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 29932 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 09:55:45 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 09:55:45 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 09:55:45 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-11 09:55:45 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-11 09:55:47 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 09:55:47 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 99 ms. Found 5 MongoDB repository interfaces.
2025-03-11 09:55:47 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 09:55:47 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 09:55:47 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 09:55:47 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 09:55:48 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 09:55:48 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2165 ms
2025-03-11 09:55:48 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@3ac078e6], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7f6fbbd6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@7688fd3], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 09:55:48 [cluster-rtt-ClusterId{value='67d008a4f1fc6855cea3ca68', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:199}] to localhost:27017
2025-03-11 09:55:48 [cluster-ClusterId{value='67d008a4f1fc6855cea3ca68', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:200}] to localhost:27017
2025-03-11 09:55:48 [cluster-ClusterId{value='67d008a4f1fc6855cea3ca68', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=73343800}
2025-03-11 09:55:48 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 09:55:48 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 09:55:48 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 09:55:48 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 09:55:48 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 09:55:49 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 09:55:49 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 09:55:49 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 09:55:50 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 09:55:50 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 09:55:50 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7393256e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f238a61, org.springframework.security.web.context.SecurityContextPersistenceFilter@59965c8a, org.springframework.security.web.header.HeaderWriterFilter@2391bbc8, org.springframework.web.filter.CorsFilter@5359de62, org.springframework.security.web.authentication.logout.LogoutFilter@2930fa4a, com.redtrack.security.JwtAuthenticationFilter@1f64c6a4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5742d751, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5b70185e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b33df, org.springframework.security.web.session.SessionManagementFilter@2b76c301, org.springframework.security.web.access.ExceptionTranslationFilter@4dd7437, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1ce25c8f]
2025-03-11 09:55:51 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 09:55:51 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 09:55:51 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 5.915 seconds (JVM running for 6.852)
2025-03-11 09:55:51 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 09:55:51 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 09:55:51 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:201}] to localhost:27017
2025-03-11 09:55:51 [RMI TCP Connection(7)-192.168.8.249] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-11 09:55:51 [RMI TCP Connection(7)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-11 09:55:51 [RMI TCP Connection(7)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-03-11 10:05:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/profile
2025-03-11 10:05:14 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:05:14 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:05:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:05:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:05:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:05:14 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-10T16:03:30Z. Current time: 2025-03-11T10:05:14Z, a difference of 64904252 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:05:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:05:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:05:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:05:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:05:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:05:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:05:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/login
2025-03-11 10:05:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:05:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:05:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:05:39 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:05:39 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:05:39 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:05:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:05:39 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:05:39 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:05:39 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:05:39 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:05:39 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:05:39 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:05:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:05:39 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:05:39 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:05:39 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:05:39 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:05:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:05:39 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:05:39 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:05:39 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:05:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:05:47 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:05:47 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:05:47 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:05:47 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:05:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:05:47 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:05:47 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:05:47 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:05:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:05:49 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:05:49 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:05:49 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:05:49 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:05:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:05:49 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:05:49 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:05:49 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:06:05 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:06:05 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:06:05 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:06:05 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:06:05 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:06:05 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:06:05 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:06:06 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:06:06 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:06:06 [http-nio-8080-exec-8] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:06:06 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:06:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:06:06 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:06:06 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:06:06 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:06:06 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:06:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:06:06 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:06:06 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:06:06 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:06:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:06:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:06:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:06:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:06:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:06:27 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.AlreadyLoggedInException: Vous êtes déjà connecté. Déconnectez-vous d'abord.]
2025-03-11 10:06:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:06:54 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-11 10:06:54 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 24084 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 10:06:54 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 10:06:54 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 10:06:54 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-11 10:06:54 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-11 10:06:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 10:06:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 148 ms. Found 5 MongoDB repository interfaces.
2025-03-11 10:06:58 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 10:06:58 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:06:58 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 10:06:58 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 10:06:59 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 10:06:59 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4774 ms
2025-03-11 10:07:00 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@7228820e], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@510feecf]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@4c12d818], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 10:07:00 [cluster-rtt-ClusterId{value='67d00b4406cb164b90d42943', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:203}] to localhost:27017
2025-03-11 10:07:00 [cluster-ClusterId{value='67d00b4406cb164b90d42943', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:202}] to localhost:27017
2025-03-11 10:07:00 [cluster-ClusterId{value='67d00b4406cb164b90d42943', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=136911500}
2025-03-11 10:07:01 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 10:07:01 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 10:07:01 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 10:07:01 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 10:07:01 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 10:07:01 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 10:07:02 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:07:03 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:07:04 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 10:07:04 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 10:07:04 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 10:07:04 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 10:07:04 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 10:07:04 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 10:07:04 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@17e309e0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14bf4b76, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d763ff8, org.springframework.security.web.header.HeaderWriterFilter@54823cc8, org.springframework.web.filter.CorsFilter@2884d44f, org.springframework.security.web.authentication.logout.LogoutFilter@57dfca48, com.redtrack.security.JwtAuthenticationFilter@639a34b8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@431c7b3d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d570786, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@ec900b, org.springframework.security.web.session.SessionManagementFilter@77508a09, org.springframework.security.web.access.ExceptionTranslationFilter@50ab32f5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2c1b86e5]
2025-03-11 10:07:04 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 10:07:04 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 10:07:04 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 11.789 seconds (JVM running for 12.884)
2025-03-11 10:07:04 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:07:04 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:07:04 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:204}] to localhost:27017
2025-03-11 10:07:05 [RMI TCP Connection(9)-192.168.8.249] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-11 10:07:05 [RMI TCP Connection(9)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-11 10:07:05 [RMI TCP Connection(9)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-03-11 10:07:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:07:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:07:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:07:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:07:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:07:32 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:07:32 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:07:32 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:07:32 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:07:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:07:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:07:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:07:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:07:32 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:07:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:07:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:07:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:07:32 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:07:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:07:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:07:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:07:45 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:07:45 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:07:45 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:07:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:07:45 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:07:45 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:07:45 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:07:45 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:07:45 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:07:45 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:07:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:07:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:07:45 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:07:45 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:07:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:07:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:07:45 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:07:45 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:07:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:07:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:07:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:07:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:07:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:07:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:07:59 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.AlreadyLoggedInException: Vous êtes déjà connecté. Déconnectez-vous d'abord.]
2025-03-11 10:07:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:08:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:08:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:08:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:08:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:08:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:08:41 [http-nio-8080-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.AlreadyLoggedInException: Vous êtes déjà connecté. Déconnectez-vous d'abord.]
2025-03-11 10:08:41 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:08:58 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-11 10:08:58 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 2520 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 10:08:58 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 10:08:58 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 10:08:58 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-11 10:08:58 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-11 10:09:00 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 10:09:00 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 109 ms. Found 5 MongoDB repository interfaces.
2025-03-11 10:09:01 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 10:09:01 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:09:01 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 10:09:01 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 10:09:01 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 10:09:01 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2584 ms
2025-03-11 10:09:01 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@72df5e33], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@723250db]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@14842533], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 10:09:01 [cluster-ClusterId{value='67d00bbde3cf141863aac582', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:206}] to localhost:27017
2025-03-11 10:09:01 [cluster-rtt-ClusterId{value='67d00bbde3cf141863aac582', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:205}] to localhost:27017
2025-03-11 10:09:01 [cluster-ClusterId{value='67d00bbde3cf141863aac582', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25260700}
2025-03-11 10:09:01 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 10:09:01 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 10:09:01 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 10:09:01 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 10:09:01 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 10:09:02 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 10:09:02 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:09:02 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:09:03 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 10:09:03 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 10:09:03 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 10:09:03 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 10:09:03 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 10:09:03 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 10:09:03 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1ce25c8f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@690dc5a5, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b76c301, org.springframework.security.web.header.HeaderWriterFilter@6de795ca, org.springframework.web.filter.CorsFilter@2d622dd0, org.springframework.security.web.authentication.logout.LogoutFilter@4970e6, com.redtrack.security.JwtAuthenticationFilter@233f3492, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@662ebd9c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f8a247c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7abccb4c, org.springframework.security.web.session.SessionManagementFilter@5ad1e1e8, org.springframework.security.web.access.ExceptionTranslationFilter@587f881, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@74b8d1da]
2025-03-11 10:09:03 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 10:09:03 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 10:09:03 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 5.997 seconds (JVM running for 7.597)
2025-03-11 10:09:03 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:09:03 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:09:03 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:207}] to localhost:27017
2025-03-11 10:09:03 [RMI TCP Connection(4)-192.168.8.249] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-11 10:09:03 [RMI TCP Connection(4)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-11 10:09:03 [RMI TCP Connection(4)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-03-11 10:09:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:09:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:09:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:09:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:09:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:09:29 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:09:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:09:29 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:09:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:09:29 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:09:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:09:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:09:29 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:09:29 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:09:29 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:09:29 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:09:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:09:29 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:09:29 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:09:29 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:09:51 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:09:51 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:09:51 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:09:51 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:09:51 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:09:51 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:09:51 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:09:51 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:09:51 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:09:51 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:09:51 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:09:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:09:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:09:51 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:09:51 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:09:52 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:09:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:09:52 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:09:52 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:09:52 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:09:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:09:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:09:54 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:09:54 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:09:55 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:09:55 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:09:55 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:09:55 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:09:55 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:10:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:10:05 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:10:05 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:10:05 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:10:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:10:05 [http-nio-8080-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.AlreadyLoggedInException: Vous êtes déjà connecté. Déconnectez-vous d'abord.]
2025-03-11 10:10:05 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:13:13 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
2025-03-11 10:13:13 [Thread-4] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:13 [Thread-4] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-11 10:13:13 [Thread-4] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-03-11 10:13:13 [Thread-4] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [BufferPoolPruner-1-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.12/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.12/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1674)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:13:13 [Thread-4] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='67d00bbde3cf141863aac582', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:186)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:290)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:314)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:355)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:808)
 java.base@17.0.12/java.net.Socket$SocketInputStream.read(Socket.java:966)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:13:13 [Thread-4] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='67d00bbde3cf141863aac582', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:13:13 [Thread-4] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [MaintenanceTimer-2-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.12/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.12/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1674)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:13:13 [Thread-4] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:13 [Thread-4] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:13 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 2520 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 10:13:13 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 10:13:13 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 10:13:14 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 10:13:14 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 5 MongoDB repository interfaces.
2025-03-11 10:13:15 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 10:13:15 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:15 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 10:13:15 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 10:13:15 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 10:13:15 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1253 ms
2025-03-11 10:13:15 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@60cd680c], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@723250db]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6f690293], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 10:13:15 [cluster-rtt-ClusterId{value='67d00cbbe3cf141863aac583', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:208}] to localhost:27017
2025-03-11 10:13:15 [cluster-ClusterId{value='67d00cbbe3cf141863aac583', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:209}] to localhost:27017
2025-03-11 10:13:15 [cluster-ClusterId{value='67d00cbbe3cf141863aac583', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2569100}
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 10:13:15 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 10:13:15 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:13:15 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:16 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 10:13:16 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 10:13:16 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 10:13:16 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 10:13:16 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 10:13:16 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 10:13:16 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@182235f3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40d9e949, org.springframework.security.web.context.SecurityContextPersistenceFilter@32339bdb, org.springframework.security.web.header.HeaderWriterFilter@4d2202ec, org.springframework.web.filter.CorsFilter@45fb182b, org.springframework.security.web.authentication.logout.LogoutFilter@430e3226, com.redtrack.security.JwtAuthenticationFilter@37bed747, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ae0614b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27083999, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7effabd5, org.springframework.security.web.session.SessionManagementFilter@6415d35c, org.springframework.security.web.access.ExceptionTranslationFilter@7fe6efb1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7659acc5]
2025-03-11 10:13:16 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:16 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 10:13:16 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 2.748 seconds (JVM running for 260.557)
2025-03-11 10:13:16 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:13:16 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:13:16 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:210}] to localhost:27017
2025-03-11 10:13:16 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-03-11 10:13:17 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
2025-03-11 10:13:17 [Thread-7] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:17 [Thread-7] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-11 10:13:17 [Thread-7] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='67d00cbbe3cf141863aac583', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:186)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:290)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:314)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:355)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:808)
 java.base@17.0.12/java.net.Socket$SocketInputStream.read(Socket.java:966)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:13:17 [Thread-7] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='67d00cbbe3cf141863aac583', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:13:17 [Thread-7] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [MaintenanceTimer-3-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.12/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.12/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1674)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:13:17 [Thread-7] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:17 [Thread-7] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:18 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 2520 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 10:13:18 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 10:13:18 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 10:13:18 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 10:13:18 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 5 MongoDB repository interfaces.
2025-03-11 10:13:18 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 10:13:18 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:18 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 10:13:18 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 10:13:18 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 10:13:18 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 895 ms
2025-03-11 10:13:19 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@44918137], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@723250db]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@325cd7a0], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 10:13:19 [cluster-rtt-ClusterId{value='67d00cbfe3cf141863aac584', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:8, serverValue:211}] to localhost:27017
2025-03-11 10:13:19 [cluster-ClusterId{value='67d00cbfe3cf141863aac584', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:7, serverValue:212}] to localhost:27017
2025-03-11 10:13:19 [cluster-ClusterId{value='67d00cbfe3cf141863aac584', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1087800}
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 10:13:19 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 10:13:19 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:19 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 10:13:19 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 10:13:19 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4f05cd27, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14b93445, org.springframework.security.web.context.SecurityContextPersistenceFilter@327b8c21, org.springframework.security.web.header.HeaderWriterFilter@2a983fbe, org.springframework.web.filter.CorsFilter@1fc77020, org.springframework.security.web.authentication.logout.LogoutFilter@5434227f, com.redtrack.security.JwtAuthenticationFilter@3408d8fc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11318ed9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7abf368e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2b00cf72, org.springframework.security.web.session.SessionManagementFilter@64549d76, org.springframework.security.web.access.ExceptionTranslationFilter@3a033d5a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@57cc67e5]
2025-03-11 10:13:20 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:20 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 10:13:20 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 2.222 seconds (JVM running for 264.31)
2025-03-11 10:13:20 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:13:20 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:13:20 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:9, serverValue:213}] to localhost:27017
2025-03-11 10:13:20 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-03-11 10:13:56 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
2025-03-11 10:13:57 [Thread-11] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:57 [Thread-11] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-11 10:13:57 [Thread-11] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='67d00cbfe3cf141863aac584', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:186)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:290)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:314)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:355)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:808)
 java.base@17.0.12/java.net.Socket$SocketInputStream.read(Socket.java:966)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:13:57 [Thread-11] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='67d00cbfe3cf141863aac584', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:13:57 [Thread-11] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [MaintenanceTimer-4-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.12/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.12/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1674)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:13:57 [Thread-11] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:57 [Thread-11] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:57 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 2520 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 10:13:57 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 10:13:57 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 10:13:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 10:13:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 79 ms. Found 5 MongoDB repository interfaces.
2025-03-11 10:13:57 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 10:13:57 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:57 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 10:13:57 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 10:13:57 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 10:13:57 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 808 ms
2025-03-11 10:13:58 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@3a83ef33], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@723250db]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@1831c6bf], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 10:13:58 [cluster-ClusterId{value='67d00ce6e3cf141863aac585', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:10, serverValue:214}] to localhost:27017
2025-03-11 10:13:58 [cluster-ClusterId{value='67d00ce6e3cf141863aac585', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1653600}
2025-03-11 10:13:58 [cluster-rtt-ClusterId{value='67d00ce6e3cf141863aac585', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:11, serverValue:215}] to localhost:27017
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 10:13:58 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 10:13:58 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:13:58 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 10:13:58 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 10:13:58 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4769b1ba, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56a5ebdf, org.springframework.security.web.context.SecurityContextPersistenceFilter@193f976c, org.springframework.security.web.header.HeaderWriterFilter@107e2759, org.springframework.web.filter.CorsFilter@1e5e7195, org.springframework.security.web.authentication.logout.LogoutFilter@712c0b5a, com.redtrack.security.JwtAuthenticationFilter@43a7589, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7554806b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14713577, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bf2a10a, org.springframework.security.web.session.SessionManagementFilter@33b66150, org.springframework.security.web.access.ExceptionTranslationFilter@3cda0bb3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@485daa8e]
2025-03-11 10:13:59 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 10:13:59 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 10:13:59 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 1.954 seconds (JVM running for 303.115)
2025-03-11 10:13:59 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:13:59 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:13:59 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:12, serverValue:216}] to localhost:27017
2025-03-11 10:13:59 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-03-11 10:14:06 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
2025-03-11 10:14:06 [Thread-15] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:06 [Thread-15] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-11 10:14:06 [Thread-15] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='67d00ce6e3cf141863aac585', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:186)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:290)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:314)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:355)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:808)
 java.base@17.0.12/java.net.Socket$SocketInputStream.read(Socket.java:966)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:14:06 [Thread-15] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='67d00ce6e3cf141863aac585', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:14:06 [Thread-15] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [MaintenanceTimer-5-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.12/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.12/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1674)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:14:06 [Thread-15] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:06 [Thread-15] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:06 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 2520 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 10:14:06 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 10:14:06 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 10:14:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 10:14:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 5 MongoDB repository interfaces.
2025-03-11 10:14:07 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 10:14:07 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:07 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 10:14:07 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 10:14:07 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 10:14:07 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 816 ms
2025-03-11 10:14:07 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@5e8775c1], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@723250db]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6da16732], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 10:14:07 [cluster-rtt-ClusterId{value='67d00cefe3cf141863aac586', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:14, serverValue:217}] to localhost:27017
2025-03-11 10:14:07 [cluster-ClusterId{value='67d00cefe3cf141863aac586', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:13, serverValue:218}] to localhost:27017
2025-03-11 10:14:07 [cluster-ClusterId{value='67d00cefe3cf141863aac586', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1331000}
2025-03-11 10:14:07 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 10:14:07 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 10:14:07 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 10:14:07 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 10:14:07 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 10:14:07 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 10:14:07 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:08 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 10:14:08 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@504a2b1a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@38644b89, org.springframework.security.web.context.SecurityContextPersistenceFilter@46b0a659, org.springframework.security.web.header.HeaderWriterFilter@5bcaed3e, org.springframework.web.filter.CorsFilter@3ab76fd2, org.springframework.security.web.authentication.logout.LogoutFilter@2a6b3300, com.redtrack.security.JwtAuthenticationFilter@20d6f43a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@37c1fc5b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3bee4480, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@289bfe23, org.springframework.security.web.session.SessionManagementFilter@18a947e8, org.springframework.security.web.access.ExceptionTranslationFilter@52146286, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@603e401f]
2025-03-11 10:14:08 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 10:14:08 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 1.831 seconds (JVM running for 312.748)
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:14:08 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:14:08 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:15, serverValue:219}] to localhost:27017
2025-03-11 10:14:08 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-03-11 10:14:46 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
2025-03-11 10:14:46 [Thread-19] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:46 [Thread-19] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-11 10:14:46 [Thread-19] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='67d00cefe3cf141863aac586', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:186)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:290)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:314)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:355)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:808)
 java.base@17.0.12/java.net.Socket$SocketInputStream.read(Socket.java:966)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:14:46 [Thread-19] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='67d00cefe3cf141863aac586', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:14:46 [Thread-19] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [MaintenanceTimer-6-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.12/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.12/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1674)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:14:46 [Thread-19] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:46 [Thread-19] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:46 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 2520 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 10:14:46 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 10:14:46 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 10:14:47 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 10:14:47 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 5 MongoDB repository interfaces.
2025-03-11 10:14:47 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 10:14:47 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:47 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 10:14:47 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 10:14:47 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 10:14:47 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 807 ms
2025-03-11 10:14:47 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@7f4b8e73], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@723250db]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@4abb3d6], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 10:14:47 [cluster-ClusterId{value='67d00d17e3cf141863aac587', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:17, serverValue:220}] to localhost:27017
2025-03-11 10:14:47 [cluster-rtt-ClusterId{value='67d00d17e3cf141863aac587', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:16, serverValue:221}] to localhost:27017
2025-03-11 10:14:47 [cluster-ClusterId{value='67d00d17e3cf141863aac587', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1427500}
2025-03-11 10:14:47 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 10:14:47 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 10:14:47 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 10:14:47 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 10:14:47 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 10:14:47 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 10:14:47 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:48 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 10:14:48 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@38fab2cd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@328d3965, org.springframework.security.web.context.SecurityContextPersistenceFilter@371f4c9f, org.springframework.security.web.header.HeaderWriterFilter@7386a7c4, org.springframework.web.filter.CorsFilter@4e7b0753, org.springframework.security.web.authentication.logout.LogoutFilter@57344e4d, com.redtrack.security.JwtAuthenticationFilter@5143d314, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b5730a6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@da9068f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4a7d2383, org.springframework.security.web.session.SessionManagementFilter@1fb111b5, org.springframework.security.web.access.ExceptionTranslationFilter@7b40ee94, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@797fbfa0]
2025-03-11 10:14:48 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:48 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 10:14:48 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 2.14 seconds (JVM running for 353.006)
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:14:48 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:14:48 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:18, serverValue:222}] to localhost:27017
2025-03-11 10:14:48 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-03-11 10:14:52 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
2025-03-11 10:14:52 [Thread-23] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:52 [Thread-23] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-11 10:14:52 [Thread-23] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='67d00d17e3cf141863aac587', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:186)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:290)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:314)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:355)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:808)
 java.base@17.0.12/java.net.Socket$SocketInputStream.read(Socket.java:966)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:14:52 [Thread-23] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='67d00d17e3cf141863aac587', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:14:52 [Thread-23] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [MaintenanceTimer-7-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.12/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.12/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1674)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:14:52 [Thread-23] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:52 [Thread-23] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:52 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 2520 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 10:14:52 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 10:14:52 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 10:14:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 10:14:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63 ms. Found 5 MongoDB repository interfaces.
2025-03-11 10:14:53 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 10:14:53 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:53 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 10:14:53 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 10:14:53 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 10:14:53 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1079 ms
2025-03-11 10:14:54 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@55ff6981], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@723250db]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@3f54d218], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 10:14:54 [cluster-ClusterId{value='67d00d1ee3cf141863aac588', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:19, serverValue:223}] to localhost:27017
2025-03-11 10:14:54 [cluster-rtt-ClusterId{value='67d00d1ee3cf141863aac588', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:20, serverValue:224}] to localhost:27017
2025-03-11 10:14:54 [cluster-ClusterId{value='67d00d1ee3cf141863aac588', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1591900}
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 10:14:54 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 10:14:54 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:54 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 10:14:54 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 10:14:54 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1a3cf817, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41a4868c, org.springframework.security.web.context.SecurityContextPersistenceFilter@44499f48, org.springframework.security.web.header.HeaderWriterFilter@623cc09a, org.springframework.web.filter.CorsFilter@2c63aa76, org.springframework.security.web.authentication.logout.LogoutFilter@6f0ede18, com.redtrack.security.JwtAuthenticationFilter@5f95ec4b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46d7e46f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@42ebd43f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2b2cc945, org.springframework.security.web.session.SessionManagementFilter@1d371992, org.springframework.security.web.access.ExceptionTranslationFilter@112267c1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@46f82611]
2025-03-11 10:14:55 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:55 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 10:14:55 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 2.469 seconds (JVM running for 359.26)
2025-03-11 10:14:55 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:14:55 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:14:55 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:21, serverValue:225}] to localhost:27017
2025-03-11 10:14:55 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-03-11 10:14:56 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
2025-03-11 10:14:56 [Thread-27] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:56 [Thread-27] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-11 10:14:56 [Thread-27] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='67d00d1ee3cf141863aac588', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:186)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:290)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:314)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:355)
 java.base@17.0.12/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:808)
 java.base@17.0.12/java.net.Socket$SocketInputStream.read(Socket.java:966)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
 app//com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
 app//com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
 app//com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
 app//com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:14:56 [Thread-27] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='67d00d1ee3cf141863aac588', description='null'}-localhost:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/java.lang.Thread.sleep(Native Method)
 app//com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:443)
 app//com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:64)
 app//com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:415)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:14:56 [Thread-27] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [MaintenanceTimer-8-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.12/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.12/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1674)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:14:56 [Thread-27] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:56 [Thread-27] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:56 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 2520 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 10:14:56 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 10:14:56 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 10:14:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 10:14:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 5 MongoDB repository interfaces.
2025-03-11 10:14:57 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 10:14:57 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:57 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 10:14:57 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 10:14:57 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 10:14:57 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 811 ms
2025-03-11 10:14:57 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@38291b97], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@723250db]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@20ea3fc3], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 10:14:57 [cluster-rtt-ClusterId{value='67d00d21e3cf141863aac589', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:22, serverValue:226}] to localhost:27017
2025-03-11 10:14:57 [cluster-ClusterId{value='67d00d21e3cf141863aac589', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:23, serverValue:227}] to localhost:27017
2025-03-11 10:14:57 [cluster-ClusterId{value='67d00d21e3cf141863aac589', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2524400}
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 10:14:57 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 10:14:57 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 10:14:57 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:14:58 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 10:14:58 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5b6127d7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@124bed12, org.springframework.security.web.context.SecurityContextPersistenceFilter@bd7a6f0, org.springframework.security.web.header.HeaderWriterFilter@1e0c47b7, org.springframework.web.filter.CorsFilter@2e51f087, org.springframework.security.web.authentication.logout.LogoutFilter@452d41aa, com.redtrack.security.JwtAuthenticationFilter@810d19a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57d96d24, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b14b997, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ff3b12, org.springframework.security.web.session.SessionManagementFilter@79243274, org.springframework.security.web.access.ExceptionTranslationFilter@6197a8b6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@60596b94]
2025-03-11 10:14:58 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 10:14:58 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 10:14:58 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 1.903 seconds (JVM running for 362.746)
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:14:58 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:14:58 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:24, serverValue:228}] to localhost:27017
2025-03-11 10:14:58 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-03-11 10:16:14 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-11 10:16:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-11 10:16:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-03-11 10:16:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:16:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:16:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:16:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:16:15 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:15 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:15 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:15 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:15 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:16:15 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:16:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:16:15 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:15 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:16:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:16:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:15 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:16:16 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/logout
2025-03-11 10:16:16 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:16 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:16:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 10:16:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:16 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:16 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/logout] with attributes [permitAll]
2025-03-11 10:16:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout
2025-03-11 10:16:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:16:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:16:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:16:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:16:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:16:26 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:26 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:27 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:27 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:27 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:16:27 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:16:27 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:16:27 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:27 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:27 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:27 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:16:27 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:16:27 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:27 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:27 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:16:29 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 10:16:29 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:29 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:29 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:29 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/logout] with attributes [permitAll]
2025-03-11 10:16:29 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout
2025-03-11 10:16:29 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:16:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:16:38 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:38 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:16:38 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:16:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:16:38 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:38 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:38 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:38 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:38 [http-nio-8080-exec-10] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:16:38 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:16:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:16:38 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:38 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:38 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:38 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:16:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:16:38 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:38 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:38 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:16:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:16:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:40 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:40 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:16:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:16:40 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:40 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:16:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 10:16:42 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:42 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:42 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:42 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/logout] with attributes [permitAll]
2025-03-11 10:16:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout
2025-03-11 10:16:42 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:16:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:16:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:16:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:16:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:16:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:53 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:16:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:16:53 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:16:53 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:53 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:53 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:16:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:16:54 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:54 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:16:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 10:16:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:16:56 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 10:16:56 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:16:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/logout] with attributes [permitAll]
2025-03-11 10:16:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout
2025-03-11 10:16:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:17:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:17:06 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:17:06 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:17:06 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:17:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:17:06 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:17:06 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:17:06 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:17:06 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:17:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:17:06 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:17:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:17:06 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:17:06 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:17:06 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:17:06 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:17:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:17:06 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:17:06 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:17:06 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:17:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:17:09 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:17:09 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:17:09 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:17:09 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:17:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:17:09 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:17:09 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:17:09 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:17:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:17:11 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:17:11 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:17:11 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:17:11 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:17:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:17:11 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:17:11 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:17:11 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:19:30 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 10:19:30 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:19:30 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:19:30 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:19:30 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/logout] with attributes [permitAll]
2025-03-11 10:19:30 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout
2025-03-11 10:19:30 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:20:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:20:22 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:20:22 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:20:22 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:20:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:20:22 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:20:22 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:20:22 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:20:22 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:20:22 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:20:22 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:20:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:20:22 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:20:22 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:20:22 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:20:22 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:20:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:20:22 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:20:22 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:20:22 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:20:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:20:23 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:20:23 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:20:23 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:20:23 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:20:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:20:23 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:20:23 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:20:23 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:20:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 10:20:32 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:20:32 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:20:32 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:20:32 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/logout] with attributes [permitAll]
2025-03-11 10:20:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout
2025-03-11 10:20:32 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:26:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:26:23 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:26:23 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:26:23 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:26:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:26:23 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:26:23 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:26:23 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:26:23 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:26:23 [http-nio-8080-exec-7] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:26:23 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:26:23 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:26:23 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:26:23 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:26:23 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:26:23 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:26:23 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:26:23 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:26:23 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:26:23 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:26:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes
2025-03-11 10:26:24 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:26:24 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:26:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:26:24 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:26:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:26:24 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:26:24 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:26:24 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:26:24 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:26:24 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:26:24 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:26:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:26:24 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:26:24 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:26:24 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:26:24 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:26:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:26:24 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:26:24 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:26:24 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:26:24 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:26:24 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:27:13 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:27:13 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:27:13 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:27:13 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:27:13 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:27:13 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:27:13 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:27:13 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:27:13 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:27:16 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:27:16 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:27:16 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:27:16 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:27:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:27:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:27:16 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:27:16 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:27:16 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:27:16 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:27:16 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:27:16 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:27:16 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:27:16 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:27:16 [http-nio-8080-exec-6] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:25, serverValue:231}] to localhost:27017
2025-03-11 10:27:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:27:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:27:16 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:27:16 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:27:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:27:16 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:28:44 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:28:44 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:28:44 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:28:44 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:28:44 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:28:44 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:28:44 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:28:44 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:28:44 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:28:51 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:28:51 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:28:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:28:51 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:28:51 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:28:51 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:28:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:28:51 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:28:51 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:28:51 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:28:51 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:28:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:28:51 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:28:51 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:28:51 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:28:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:28:51 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:28:51 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:28:51 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:28:51 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:28:53 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:28:53 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:28:53 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:28:53 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:28:53 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:28:53 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:28:53 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:28:53 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:28:53 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:28:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:28:55 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:28:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:28:55 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:28:55 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:28:55 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:28:55 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:28:55 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:28:55 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:28:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:28:55 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:28:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:28:55 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:28:55 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:28:55 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:28:55 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:28:55 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:28:55 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:28:55 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:28:55 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:28:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:28:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:28:56 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:28:56 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:28:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:28:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:28:56 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:28:56 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:28:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:29:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:29:00 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:29:00 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:29:00 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:29:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:29:00 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:29:00 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:29:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:29:00 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:29:00 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:29:00 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:29:00 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:29:00 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:29:00 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:29:00 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:29:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:29:00 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:29:00 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:29:00 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:29:00 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:29:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:29:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:29:08 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:29:08 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:29:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:29:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:29:08 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:29:08 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:29:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:29:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:29:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:29:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:29:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:29:09 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:29:09 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:29:09 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:29:09 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:29:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:29:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:29:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:29:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:29:09 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:29:09 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:29:09 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:29:09 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:29:09 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:29:09 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:29:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:29:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:29:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:29:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:29:11 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:29:11 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:29:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:29:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:29:11 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:29:11 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:29:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:29:12 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:29:12 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:29:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:29:12 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:29:12 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:29:12 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:29:12 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:29:12 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:29:12 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:29:12 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:29:12 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:29:12 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:29:12 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:29:12 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:29:12 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:29:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:29:12 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:29:12 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:29:12 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:29:12 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:30:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:30:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:30:40 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:30:40 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:30:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:30:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:30:40 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:30:40 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:30:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:30:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:30:42 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:30:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:30:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:30:42 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:30:42 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:30:42 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:30:42 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:30:42 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:30:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:30:42 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:30:42 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:30:42 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:30:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:30:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:30:42 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:30:42 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:30:42 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:30:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:30:42 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:30:43 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:30:43 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:30:43 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:30:43 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:30:43 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:30:43 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:30:43 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:30:43 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:30:43 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:30:44 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:30:44 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:30:44 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:30:44 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:30:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:30:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:30:44 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:30:44 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:30:44 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:30:44 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:30:44 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:30:44 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:30:44 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:30:44 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:30:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:30:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:30:44 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:30:44 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:30:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:30:44 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:30:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:30:45 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:30:45 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:30:45 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:30:45 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:30:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:30:45 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:30:45 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:30:45 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:30:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 10:30:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:30:47 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:30:47 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:30:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/logout] with attributes [permitAll]
2025-03-11 10:30:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout
2025-03-11 10:30:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:31:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:31:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:31:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:31:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:31:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:31:40 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:40 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:40 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:40 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:40 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 10:31:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:31:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:31:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:31:40 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:40 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:31:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:31:40 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:40 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:31:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:31:42 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:31:42 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:42 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:42 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:31:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:31:43 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:43 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:31:44 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:31:44 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:31:44 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:44 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:31:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:31:44 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:44 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:44 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:31:44 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:31:44 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:31:44 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:31:44 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:31:44 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:31:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:31:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:31:44 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:44 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:31:44 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:31:45 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:31:45 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:31:45 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:45 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:45 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:31:45 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:31:45 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:45 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:45 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:31:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:31:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:31:50 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:50 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:31:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:31:50 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:50 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:31:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:31:51 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:31:51 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:51 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:51 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:31:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:31:51 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:51 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:51 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:31:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:31:52 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:31:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:31:52 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:31:52 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:52 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:52 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:52 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:31:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:31:52 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:31:52 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:31:52 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:31:52 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:31:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:31:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:31:52 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:31:52 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:31:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:31:52 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:33:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:33:33 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:33:33 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:33:33 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:33:33 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:33:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:33:33 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:33:33 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:33:33 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:33:42 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:33:42 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:33:42 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:33:42 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:33:42 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:33:42 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:33:42 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:33:42 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:33:42 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:33:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:33:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:33:47 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:33:47 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:33:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:33:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:33:47 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:33:47 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:33:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:33:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:33:48 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:33:48 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:33:48 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:33:48 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:33:48 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:33:48 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:33:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:33:48 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:33:48 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:33:48 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:33:48 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:33:48 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:33:48 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:33:48 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:33:48 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:33:48 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:33:48 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:33:48 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:33:48 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:35:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:35:30 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:35:30 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:35:30 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:35:30 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:35:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:35:30 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:35:30 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:35:30 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:35:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:35:33 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:35:33 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:35:33 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:35:33 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:35:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:35:33 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:35:33 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:35:33 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:35:55 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:35:55 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:35:55 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:35:55 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:35:55 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:35:55 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:35:55 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:35:55 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:35:55 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:36:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:36:10 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:36:10 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:36:10 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:36:10 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:36:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:36:10 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:36:10 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:36:10 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:36:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:36:15 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:36:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:36:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:36:15 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:36:15 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:36:15 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:36:15 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:36:15 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:36:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:36:15 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:36:15 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:36:15 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:36:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:36:15 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:36:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:36:15 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:36:15 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:36:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:36:15 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:38:31 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:38:31 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:38:31 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:38:31 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:38:31 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:38:31 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:38:31 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:38:31 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:38:31 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:38:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:38:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:38:32 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:38:32 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:38:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:38:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:38:32 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:38:32 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:38:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:38:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:38:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:38:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:38:33 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:38:33 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:38:33 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:38:33 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:38:33 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:38:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:38:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:38:33 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:38:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:38:33 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:38:33 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:38:33 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:38:33 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:38:33 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:38:33 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:38:33 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:38:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:47:31 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:47:31 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:47:31 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:47:31 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:47:31 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:47:31 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:47:31 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:47:31 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:47:31 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:48:34 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:48:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:48:34 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:48:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:48:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:48:34 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:48:34 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:48:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:48:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:49:19 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:49:19 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:49:19 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:19 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:19 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:49:19 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:49:19 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:19 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:19 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:49:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:49:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:49:26 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:26 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:49:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:49:26 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:26 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:49:35 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:49:35 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:49:35 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:35 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:35 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:49:35 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:49:35 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:35 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:35 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:49:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:49:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:49:37 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:37 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:49:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:49:37 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:37 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:49:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:49:37 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:49:37 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:37 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:37 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:49:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:49:37 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:49:37 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:49:37 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:49:37 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:49:37 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:49:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes
2025-03-11 10:49:50 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:49:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes
2025-03-11 10:49:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:49:50 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:49:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:49:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/classes
2025-03-11 10:49:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:49:50 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:50 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:49:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:49:50 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:49:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/classes
2025-03-11 10:49:50 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:49:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:49:50 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:49:50 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:49:50 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:49:50 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:49:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:49:50 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:49:50 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:49:50 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "nom" : "testing"}, Fields: {}, Sort: {}
2025-03-11 10:49:50 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "nom" : "testing"} in collection: classes
2025-03-11 10:49:50 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [nom, niveau, annee, active, etapes, users, _class] in collection: classes
2025-03-11 10:49:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:49:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:49:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:49:52 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:52 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:49:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:49:52 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:52 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:49:53 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:49:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:49:53 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:53 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:49:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:49:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:49:53 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:49:53 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:49:53 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:49:53 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:49:53 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:49:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:49:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:49:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:49:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:49:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:49:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:50:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes
2025-03-11 10:50:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:50:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:50:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes
2025-03-11 10:50:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:50:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:50:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/classes
2025-03-11 10:50:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:50:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:50:15 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:50:15 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:50:15 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:50:15 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:50:15 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:50:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:50:15 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:50:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/classes
2025-03-11 10:50:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:50:15 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:50:15 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:50:15 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:50:15 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:50:15 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:50:15 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:50:15 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "nom" : "salam"}, Fields: {}, Sort: {}
2025-03-11 10:50:15 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "nom" : "salam"} in collection: classes
2025-03-11 10:50:15 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [nom, niveau, annee, active, etapes, users, _class] in collection: classes
2025-03-11 10:50:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:50:15 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:50:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:50:16 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:50:16 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:50:16 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:50:16 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:50:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:50:16 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:50:16 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:50:16 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:50:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:50:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:50:18 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:50:18 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:50:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:50:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:50:18 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:50:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:50:18 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:50:18 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:50:18 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:50:18 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:50:18 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:50:18 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:50:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:50:18 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:50:18 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:50:18 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:50:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:50:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:51:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:51:27 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:51:27 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:51:27 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:51:27 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:51:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:51:27 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:51:27 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:51:27 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:51:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:51:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:51:33 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:51:33 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:51:33 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:51:33 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:51:33 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:51:33 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:51:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:51:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:51:33 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:51:33 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:51:33 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:51:33 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:51:33 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:51:33 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:51:33 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:51:33 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:51:33 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:51:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:51:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes
2025-03-11 10:51:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes
2025-03-11 10:51:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:51:37 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:51:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:51:37 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:51:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/classes
2025-03-11 10:51:37 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:51:37 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:51:37 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:51:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:51:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:51:37 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:51:37 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:51:37 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:51:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/classes
2025-03-11 10:51:37 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:51:37 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:51:37 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "nom" : "Quibusdam tempore o"}, Fields: {}, Sort: {}
2025-03-11 10:51:37 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "nom" : "Quibusdam tempore o"} in collection: classes
2025-03-11 10:51:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:51:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:51:37 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:51:37 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:51:37 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:51:37 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:51:37 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [nom, niveau, annee, active, etapes, users, _class] in collection: classes
2025-03-11 10:51:37 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:51:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:51:37 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:51:37 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:51:37 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:51:37 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:51:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:51:37 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:51:37 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:51:37 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:51:37 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:51:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:51:37 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:51:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:51:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:51:54 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:51:54 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:51:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:51:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:51:54 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:51:54 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:51:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:51:57 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:51:57 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:51:57 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:51:57 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:51:57 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:51:57 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:51:57 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:51:57 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:51:57 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:51:57 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:51:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:51:57 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:51:57 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:51:57 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:51:57 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:51:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:51:57 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:51:57 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:51:57 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:51:57 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:53:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:53:18 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:53:18 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:18 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:18 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:53:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:53:18 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:18 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:18 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:53:33 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:53:33 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:53:33 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:33 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:33 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:53:33 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:53:33 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:33 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:33 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:53:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:53:35 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:53:35 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:35 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:35 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:53:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:53:35 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:35 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:35 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:53:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:53:39 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:53:39 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:39 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:39 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:53:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:53:39 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:39 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:39 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:53:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:53:40 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:53:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:53:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:53:40 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:40 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:40 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:40 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:53:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:53:40 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:53:40 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:53:40 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:53:40 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:53:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:53:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:53:40 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:53:40 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:53:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/classes
2025-03-11 10:53:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:53:46 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:53:46 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:53:46 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:46 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:46 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:46 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:46 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:53:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/classes
2025-03-11 10:53:46 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:53:46 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:53:46 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "nom" : "Tenetur dolorem corr"}, Fields: {}, Sort: {}
2025-03-11 10:53:46 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "nom" : "Tenetur dolorem corr"} in collection: classes
2025-03-11 10:53:46 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:53:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:53:46 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [nom, niveau, annee, active, etapes, users, _class] in collection: classes
2025-03-11 10:53:46 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:53:46 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:53:46 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:53:46 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:53:46 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:53:46 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:53:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:53:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:53:47 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:47 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:53:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:53:47 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:47 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:53:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:53:49 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:53:49 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:49 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:53:49 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:53:49 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:53:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:53:49 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:53:49 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:53:49 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:53:49 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:53:49 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:49 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:49 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:53:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:53:49 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:49 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:49 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:53:49 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:53:59 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/classes
2025-03-11 10:53:59 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:53:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:53:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:53:59 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:59 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:53:59 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:59 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:53:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:53:59 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:53:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:53:59 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/classes
2025-03-11 10:53:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:53:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:53:59 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:53:59 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:53:59 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:53:59 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "nom" : "fvfv"}, Fields: {}, Sort: {}
2025-03-11 10:53:59 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:53:59 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "nom" : "fvfv"} in collection: classes
2025-03-11 10:53:59 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [nom, niveau, annee, active, etapes, users, _class] in collection: classes
2025-03-11 10:53:59 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:53:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:54:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:54:03 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:54:03 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:54:03 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:54:03 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:54:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:54:03 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:54:03 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:54:03 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:54:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:54:03 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:54:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:54:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:54:03 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:54:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:54:03 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:54:03 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:54:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:54:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:54:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:54:03 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:54:03 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:54:03 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:54:03 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:54:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:54:03 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:54:03 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:54:04 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:54:04 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:54:13 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/classes
2025-03-11 10:54:13 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:54:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:54:13 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:54:13 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:54:13 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:54:13 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:54:13 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:54:13 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:54:13 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/classes
2025-03-11 10:54:13 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:54:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:54:13 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:54:13 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:54:13 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:54:13 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:54:13 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "nom" : "rrr"}, Fields: {}, Sort: {}
2025-03-11 10:54:13 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:54:13 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "nom" : "rrr"} in collection: classes
2025-03-11 10:54:13 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:54:13 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [nom, niveau, annee, active, etapes, users, _class] in collection: classes
2025-03-11 10:54:13 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:54:13 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:54:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:54:23 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:54:23 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:54:23 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:54:23 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:54:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:54:23 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:54:23 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:54:23 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:54:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:54:24 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:54:24 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:54:24 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:54:24 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:54:24 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:54:24 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:54:24 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:54:24 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 10:54:24 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 10:54:24 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 10:54:24 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 10:54:24 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 10:54:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 10:54:24 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:54:24 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 10:54:24 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 10:54:24 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 10:54:24 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:54:24 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:56:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:21 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:21Z, a difference of 41620 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:56:24 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:24 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:56:24 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:24 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:24 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:24 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:24Z, a difference of 44004 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:24 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:24Z, a difference of 44004 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:24 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:24 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:24 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:24 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:24 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:24 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:24 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:24 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:24 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:24 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:24 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:56:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:25 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:25Z, a difference of 45869 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:56:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:56:26 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:26 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:26Z, a difference of 46945 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:26 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:26 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:26Z, a difference of 46946 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:26 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:26 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:26 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:26 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:26 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:56:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:33 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:33Z, a difference of 53435 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:34 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:56:34 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:34 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:34 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:34Z, a difference of 54492 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:34 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:34 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:34 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:34 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:34 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:34 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:34 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:56:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:34 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:34Z, a difference of 54506 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:34 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:56:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:36 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:36Z, a difference of 56863 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:56:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:56:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:37 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:37Z, a difference of 57854 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:37 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:37Z, a difference of 57855 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:56:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:50 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:50Z, a difference of 70313 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:56:59 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:59 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:56:59 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:56:59Z, a difference of 79807 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:56:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:56:59 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:56:59 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:56:59 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:56:59 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:56:59 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:57:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:01 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:01Z, a difference of 81602 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:57:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:01 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:01Z, a difference of 81611 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:57:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:02 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:02Z, a difference of 82981 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:57:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:57:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:04 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:04Z, a difference of 84121 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:04 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:04Z, a difference of 84122 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:57:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:08 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:08Z, a difference of 88614 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:57:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:17 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:17Z, a difference of 97928 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:57:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:57:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:18 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:18Z, a difference of 98683 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:18 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:18Z, a difference of 98686 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:24 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:57:24 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:24 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:24 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:24Z, a difference of 104086 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:24 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:24 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:24 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:24 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:24 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:24 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:57:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:25 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:25Z, a difference of 105595 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:57:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:57:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:27 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:27Z, a difference of 107135 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:27 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:27Z, a difference of 107136 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:57:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:36 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:36Z, a difference of 116319 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:38 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:57:38 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:38 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:38 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:38Z, a difference of 118634 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:38 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:38 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:38 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:38 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:38 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:38 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:57:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:57:45 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:57:45Z, a difference of 125746 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:57:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:57:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:57:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:57:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:57:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:57:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:58:12 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:58:12 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:58:12 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:58:12 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:58:12Z, a difference of 152136 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:58:12 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:58:12 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:58:12 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:58:12 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:58:12 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:58:12 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:58:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:58:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:58:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:58:25 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:58:25Z, a difference of 165624 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:58:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:58:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:58:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:58:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:58:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:58:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:58:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:58:29 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:58:29 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:58:29 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:58:29Z, a difference of 169609 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:58:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:58:29 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:58:29 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:58:29 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:58:29 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:58:29 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:59:11 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 10:59:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:59:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:59:11 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:59:11Z, a difference of 211147 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:59:11 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:59:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:59:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:59:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:59:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:59:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:59:11 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 10:59:11 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:59:11 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:59:11 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:59:11Z, a difference of 211157 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:59:11 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 10:59:11 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:59:11 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:59:11 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 10:59:11 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:59:11 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:59:12 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 10:59:12 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:59:12 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:59:12 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T10:55:40Z. Current time: 2025-03-11T10:59:12Z, a difference of 212864 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 10:59:12 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-03-11 10:59:12 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:59:12 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:59:12 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [POST /error] with attributes [authenticated]
2025-03-11 10:59:12 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 10:59:12 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 10:59:33 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 10:59:33 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 10:59:33 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 10:59:33 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 10:59:33 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 10:59:33 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.AlreadyLoggedInException: Vous êtes déjà connecté. Déconnectez-vous d'abord.]
2025-03-11 10:59:33 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:00:27 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 11:00:27 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:00:27 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:00:27 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 11:00:27 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 11:00:27 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "BAHAJO@GMAIL.com"}, Fields: {}, Sort: {}
2025-03-11 11:00:27 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "BAHAJO@GMAIL.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:00:27 [http-nio-8080-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.UserException: Utilisateur non trouvé]
2025-03-11 11:00:27 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:00:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 11:00:39 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:00:39 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:00:39 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 11:00:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 11:00:39 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.AlreadyLoggedInException: Vous êtes déjà connecté. Déconnectez-vous d'abord.]
2025-03-11 11:00:39 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:03:25 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-11 11:03:25 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 34908 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 11:03:25 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 11:03:25 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 11:03:25 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-11 11:03:25 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-11 11:03:26 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 11:03:26 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 101 ms. Found 5 MongoDB repository interfaces.
2025-03-11 11:03:27 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 11:03:27 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 11:03:27 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 11:03:27 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 11:03:27 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 11:03:27 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2242 ms
2025-03-11 11:03:28 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@36ef76], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7ac14700]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@406db9da], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 11:03:28 [cluster-ClusterId{value='67d01880dc05d2076e04f2b5', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:233}] to localhost:27017
2025-03-11 11:03:28 [cluster-rtt-ClusterId{value='67d01880dc05d2076e04f2b5', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:232}] to localhost:27017
2025-03-11 11:03:28 [cluster-ClusterId{value='67d01880dc05d2076e04f2b5', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33701000}
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 11:03:28 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 11:03:28 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 11:03:28 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:03:29 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 11:03:29 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 11:03:29 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 11:03:29 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 11:03:29 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 11:03:29 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 11:03:29 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6f6dbd40, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@be5146e, org.springframework.security.web.context.SecurityContextPersistenceFilter@45dc5b58, org.springframework.security.web.header.HeaderWriterFilter@5cb0ad69, org.springframework.web.filter.CorsFilter@7d73b830, org.springframework.security.web.authentication.logout.LogoutFilter@6673ec3f, com.redtrack.security.JwtAuthenticationFilter@3cd73092, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@728c2fe4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@77508a09, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3522ddf6, org.springframework.security.web.session.SessionManagementFilter@b7d5475, org.springframework.security.web.access.ExceptionTranslationFilter@1781e9f0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@14bf4b76]
2025-03-11 11:03:29 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 11:03:29 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 11:03:29 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 5.052 seconds (JVM running for 6.182)
2025-03-11 11:03:29 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:03:29 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:03:29 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:234}] to localhost:27017
2025-03-11 11:03:29 [RMI TCP Connection(2)-192.168.8.249] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-11 11:03:29 [RMI TCP Connection(2)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-11 11:03:29 [RMI TCP Connection(2)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-03-11 11:07:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/login
2025-03-11 11:07:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:07:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:07:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 11:07:42 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:07:42 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:07:42 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 11:07:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 11:07:42 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:07:42 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:07:43 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:07:43 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:07:43 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 11:07:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:07:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/profile
2025-03-11 11:07:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:07:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:07:43 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:07:43 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:07:43 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:07:43 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:07:43 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:07:43 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:07:43 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:07:43 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:07:43 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:07:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:07:44 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:07:44 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:07:44 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:07:44 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:07:44 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:07:44 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:07:44 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:07:44 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:07:44 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:07:44 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:07:44 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:07:44 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:07:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:07:44 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:07:44 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:07:44 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:07:44 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:07:44 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:07:44 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:07:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 11:07:48 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:07:48 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:07:48 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:07:48 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/logout] with attributes [permitAll]
2025-03-11 11:07:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout
2025-03-11 11:07:48 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:07:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 11:07:58 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:07:58 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:07:58 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 11:07:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 11:07:58 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 11:07:58 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:07:59 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 11:07:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:07:59 [http-nio-8080-exec-8] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 11:07:59 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:07:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:07:59 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:07:59 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 11:07:59 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:07:59 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:07:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:07:59 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 11:07:59 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:07:59 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 11:08:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:02 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:02 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/logout] with attributes [permitAll]
2025-03-11 11:08:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout
2025-03-11 11:08:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 11:08:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:08:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 11:08:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 11:08:14 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:14 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:14 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:14 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:14 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 11:08:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:08:15 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:15 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:15 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:15 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:08:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:08:15 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:15 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:15 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:17 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:08:17 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:17 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:08:17 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:17 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:17 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:17 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:17 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:17 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:08:17 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:08:17 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:08:17 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:08:17 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:08:17 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:17 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:17 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:08:17 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:08:17 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:08:17 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:17 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:08:20 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:20 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:20 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:20 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:08:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:08:20 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:20 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:20 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:08:21 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:08:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:21 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:21 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:21 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:21 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:21 [http-nio-8080-exec-7] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:235}] to localhost:27017
2025-03-11 11:08:21 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:08:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:08:21 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:08:21 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:08:21 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:08:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:08:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:08:21 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:08:21 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:21 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:22 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/classes
2025-03-11 11:08:43 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:43 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:08:43 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:43 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:43 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:43 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:43 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:43 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:08:43 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:08:43 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:08:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/classes
2025-03-11 11:08:43 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:08:43 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:08:43 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:08:43 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:08:43 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:08:43 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:08:43 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "nom" : "Quo iure doloribus t"}, Fields: {}, Sort: {}
2025-03-11 11:08:43 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "nom" : "Quo iure doloribus t"} in collection: classes
2025-03-11 11:08:43 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [nom, niveau, annee, active, etapes, users, _class] in collection: classes
2025-03-11 11:08:43 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:43 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:08:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:47 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:47 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:08:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:08:47 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:47 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:08:48 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:08:48 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:48 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:48 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:48 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:48 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:48 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:48 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:08:48 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:08:48 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:08:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:08:48 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:08:48 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:48 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:08:48 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:08:48 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:48 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:08:48 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:48 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:53 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:08:53 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:53 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:53 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:53 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:08:53 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:08:53 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:53 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:53 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:08:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:54 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:54 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:08:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:08:54 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:54 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:55 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:08:55 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:08:55 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:08:55 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:55 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:55 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:55 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:55 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:08:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:08:55 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:08:55 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:08:55 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:08:55 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:08:55 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:08:55 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:08:55 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:08:55 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:08:55 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:08:55 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:09:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/classes
2025-03-11 11:09:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:09:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:09:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:09:01 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:09:01 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:09:01 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:09:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:09:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:09:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:09:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/classes
2025-03-11 11:09:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:09:01 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:09:01 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:09:01 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:09:01 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:09:01 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:09:01 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "nom" : "Et minus doloremque "}, Fields: {}, Sort: {}
2025-03-11 11:09:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:09:01 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "nom" : "Et minus doloremque "} in collection: classes
2025-03-11 11:09:01 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [nom, niveau, annee, active, etapes, users, _class] in collection: classes
2025-03-11 11:09:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:09:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:09:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:09:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:09:03 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:09:03 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:09:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:09:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:09:03 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:09:03 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:09:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:09:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:09:04 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:09:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:09:04 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:09:04 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:09:04 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:09:04 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:09:04 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:09:04 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:09:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:09:04 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:09:04 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:09:04 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:09:04 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:09:04 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:09:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:09:04 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:09:04 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:09:04 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:09:04 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:14:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:14:12 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:14:12 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:14:12 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:14:12 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:14:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:14:12 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:14:12 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:14:12 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:14:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:14:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:14:17 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:14:17 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:14:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:14:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:14:17 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:14:17 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:14:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:14:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:14:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:14:22 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:14:22 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:14:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:14:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:14:22 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:14:22 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:14:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:11 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:15:11 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:11 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:11 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:11 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:15:11 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:15:11 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:11 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:11 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:15:30 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:30 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:30 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:30 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:15:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:15:30 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:30 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:30 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:15:31 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:15:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:31 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:31 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:31 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:31 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:15:31 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:15:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:15:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:15:31 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:31 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:15:31 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:15:31 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:31 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:15:31 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:15:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:31 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/67c5b400850fed6db51ff050/archive
2025-03-11 11:15:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67c5b400850fed6db51ff050/archive
2025-03-11 11:15:39 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:39 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:39 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:39 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67c5b400850fed6db51ff050/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:15:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67c5b400850fed6db51ff050/archive
2025-03-11 11:15:39 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:15:39 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:15:39 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5b400850fed6db51ff050"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:15:39 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 11:15:39 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:15:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:41 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:15:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:15:41 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:15:42 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:42 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:42 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:15:42 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:42 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:15:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:15:42 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:42 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:42 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:15:42 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:15:42 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:15:42 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:15:42 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:42 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:15:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:15:42 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:42 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:42 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/67d019cddc05d2076e04f2b7/archive
2025-03-11 11:15:49 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:49 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67d019cddc05d2076e04f2b7/archive
2025-03-11 11:15:49 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:49 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:49 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:49 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67d019cddc05d2076e04f2b7/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:15:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67d019cddc05d2076e04f2b7/archive
2025-03-11 11:15:49 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:15:49 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:15:49 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67d019cddc05d2076e04f2b7"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:15:49 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 11:15:49 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:15:50 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:50 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:50 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:50 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:15:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:15:50 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:50 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:50 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:51 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:15:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:15:51 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:51 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:15:51 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:51 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:51 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:51 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:51 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:15:51 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:15:51 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:15:51 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:15:51 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:15:51 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:15:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:15:51 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:15:51 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:15:51 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:15:51 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:15:51 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:17:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/67d019bbdc05d2076e04f2b6/archive
2025-03-11 11:17:19 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:17:19 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:17:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67d019bbdc05d2076e04f2b6/archive
2025-03-11 11:17:19 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:17:19 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:17:19 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:17:19 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67d019bbdc05d2076e04f2b6/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:17:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67d019bbdc05d2076e04f2b6/archive
2025-03-11 11:17:19 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:17:19 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:17:19 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67d019bbdc05d2076e04f2b6"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:17:19 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 11:17:19 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:17:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:17:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:17:21 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:17:21 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:17:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:17:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:17:21 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:17:21 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:17:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:17:23 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:17:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:17:23 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:17:23 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:17:23 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:17:23 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:17:23 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:17:23 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:17:23 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:17:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:17:23 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:17:23 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:17:23 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:17:23 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:17:23 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:17:23 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:17:23 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:17:23 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:17:23 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:17:23 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:18:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:18:58 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:18:58 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:18:58 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:18:58 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:18:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:18:58 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:18:58 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:18:58 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:19:05 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:19:05 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:05 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:05 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:05 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:05 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:05 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:19:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:19:05 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:19:05 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:19:05 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:19:05 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:19:05 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:19:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:19:05 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:05 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:05 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:05 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:19:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:14 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:14 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:19:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:19:14 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:19:14 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:19:14 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:19:14 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:19:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:19:16 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:16 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:16 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:16 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:19:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:19:16 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:16 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:16 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:19:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:17 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:17 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:19:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:19:17 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:19:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:19:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:19:17 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:17 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:19:17 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:19:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:17 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:17 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:17 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:19:17 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:19:17 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:17 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:17 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:19:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:18 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:18 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:19:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:19:18 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:18 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:19 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:19:19 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:19 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:19:19 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:19 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:19 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:19 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:19 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:19 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:19:19 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:19:19 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:19:19 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:19:19 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:19:19 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:19:19 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:19:19 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:19 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:19:19 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:19 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:19 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:19:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:25 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:25 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:19:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:19:25 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:19:25 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:19:25 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:19:25 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:19:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:19:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:27 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:27 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:19:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:19:27 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:27 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:19:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:28 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:28 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:19:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:19:28 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:28 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:19:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:19:29 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:19:29 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:29 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:29 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:19:29 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:19:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:19:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:19:29 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:19:29 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:19:29 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:19:29 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:19:29 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:19:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:19:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:19:29 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:21:07 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:21:07 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:21:07 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:07 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:07 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:21:07 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:21:07 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:07 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:07 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:21:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:21:11 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:21:11 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:11 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:21:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:21:11 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:21:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:21:11 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:21:11 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:21:11 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:21:11 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:21:11 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:11 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:11 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:21:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:21:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:21:11 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:11 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:21:12 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:21:12 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:21:12 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:12 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:12 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:21:12 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:21:12 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:12 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:12 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:21:13 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:21:13 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:21:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:21:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:21:13 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:13 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:13 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:13 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:13 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:21:13 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:21:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:21:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:21:13 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:21:13 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:21:13 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:21:13 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:13 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:21:13 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:21:13 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:21:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/67d0154ee3cf141863aac58a
2025-03-11 11:21:17 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:21:17 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:21:17 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:21:17 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:21:17 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:17 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67d0154ee3cf141863aac58a
2025-03-11 11:21:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:21:17 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:17 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:17 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:21:17 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:21:17 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:21:17 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:21:17 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:21:17 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:21:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67d0154ee3cf141863aac58a] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:21:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67d0154ee3cf141863aac58a
2025-03-11 11:21:17 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:21:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:21:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:21:17 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67d0154ee3cf141863aac58a"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:21:17 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "nom" : "test"}, Fields: {}, Sort: {}
2025-03-11 11:21:17 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "nom" : "test"} in collection: classes
2025-03-11 11:21:17 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 11:21:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:21:17 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:21:17 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:21:17 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:17 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:17 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:21:17 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:21:17 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:21:17 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:21:17 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:21:17 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:21:17 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:21:19 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:21:19 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:21:19 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:19 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:19 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:21:19 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:21:19 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:19 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:19 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:21:20 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:21:20 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:21:20 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:20 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:20 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:21:20 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:21:20 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:21:20 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:21:20 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:21:20 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:21:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:21:20 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:21:20 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:21:20 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:20 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:20 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:21:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:21:20 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:21:20 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:21:20 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:27:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:27:57 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:27:57 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:27:57 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:27:57 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:27:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:27:57 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:27:57 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:27:57 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:28:02 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:03 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:03 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:03 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:28:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:28:03 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:03 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:03 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:28:10 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:10 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:10 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:28:10 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:10 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:28:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:28:10 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:10 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:10 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:28:10 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:10 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:10 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:28:10 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:10 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:28:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:28:10 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:10 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:10 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/archived
2025-03-11 11:28:12 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:12 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:12 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:28:12 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:12 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:12 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:12 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:28:12 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:28:12 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:12 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:12 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:28:12 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:28:12 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:28:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:15 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:15 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:28:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:28:15 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:15 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:28:16 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:16 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:16 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:16 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:28:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:28:16 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:28:16 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:16 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:16 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:16 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:28:16 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:16 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:16 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:28:16 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:16 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:28:16 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:28:16 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:16 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:16 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:28:18 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:18 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:18 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:18 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:28:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:28:18 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:18 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:18 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:28:18 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:28:18 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:28:21 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:21 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:21 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:21 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:28:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:28:21 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:21 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:21 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:28:21 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:28:21 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:22 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:28:22 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:22 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:22 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:28:22 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:28:22 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:22 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:28:24 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:24 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:28:24 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:24 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:24 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:24 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:24 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:24 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:28:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:28:24 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:24 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:24 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:28:24 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:28:24 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:28:24 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:28:24 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:24 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:24 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:24 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:28:51 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:51 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:51 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:51 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:28:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:28:51 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:51 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:51 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:28:52 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:52 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:28:52 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:52 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:52 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:52 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:52 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:52 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:28:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:28:52 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:52 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:52 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:28:52 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:28:52 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:28:52 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:28:52 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:52 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:52 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:52 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:53 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:28:53 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:53 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:53 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:53 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:28:53 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:28:53 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:53 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:53 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:28:53 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:28:53 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:28:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:28:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:28:56 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:28:56 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:28:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:28:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:28:56 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:56 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:28:56 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:28:56 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:28:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:00 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/67d01647e3cf141863aac58e/archive
2025-03-11 11:29:00 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:00 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67d01647e3cf141863aac58e/archive
2025-03-11 11:29:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:00 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:00 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67d01647e3cf141863aac58e/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67d01647e3cf141863aac58e/archive
2025-03-11 11:29:00 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:00 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:00 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67d01647e3cf141863aac58e"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:00 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 11:29:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:29:03 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:03 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:03 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:03 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:29:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:29:03 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:03 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:03 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:29:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:29:04 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:04 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:04 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:04 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:29:04 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:04 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:04 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:29:04 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:29:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:29:04 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:04 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:29:06 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:06 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:06 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:06 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:29:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:06 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:29:06 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:06 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:29:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:08 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:08 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:29:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:29:08 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:08 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:10 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:29:10 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:29:10 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:10 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:10 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:10 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:10 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:10 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:10 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:29:10 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:29:10 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:10 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:10 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:10 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:29:10 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:10 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:10 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:29:10 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:10 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:10 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:29:11 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:11 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:11 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:11 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:29:11 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:11 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:11 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:29:11 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:11 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:29:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:20 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:20 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:29:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:29:20 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:20 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:29:24 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:29:24 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:24 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:24 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:24 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:24 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:24 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:29:24 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:29:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:29:24 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:24 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:24 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:24 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:24 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:29:24 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:24 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:24 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:25 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:29:25 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:25 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:25 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:25 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:29:25 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:29:25 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:25 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:25 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:29:26 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:29:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:26 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:26 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:26 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:26 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:29:26 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:29:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:29:26 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:26 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:26 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:26 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:26 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:29:26 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:26 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:29:27 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:27 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:27 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:27 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:29:27 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:27 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:27 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:29:27 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:27 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:29 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:29:29 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:29 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:29 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:29 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:29 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:29:29 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:29 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:29 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:29:29 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:29 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:29:30 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:30 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:30 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:30 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:29:30 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:30 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:30 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:29:30 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:30 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:29:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:31 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:31 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:29:31 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:31 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:31 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:29:31 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:29:32 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:32 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:32 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:32 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:29:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:32 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:29:32 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:32 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:29:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:32 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:32 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:29:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:32 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:29:32 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:33 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:29:33 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:33 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:33 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:33 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:33 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:29:33 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:33 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:33 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:29:33 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:33 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:34 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:29:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:34 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:34 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:29:34 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:34 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:34 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:29:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:55 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:29:55 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:55 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:55 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:55 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:29:55 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:29:55 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:55 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:55 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:29:56 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:56 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:56 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:56 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:29:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:29:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:29:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:29:56 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:56 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:29:56 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:29:56 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:56 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:29:56 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:56 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:29:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:29:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:29:56 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:29:56 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:29:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:30:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:30:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:30:11 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:30:11 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:30:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:30:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:30:11 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:30:11 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:30:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:31:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:31:02 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:31:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:31:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:31:02 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:31:02 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:31:02 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:31:02 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:31:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:31:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:31:02 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:31:02 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:31:02 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:31:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:31:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:31:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:31:02 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:31:02 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:31:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:31:02 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:31:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:31:58 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:31:58 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:31:58 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:31:58 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:31:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:31:58 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:31:58 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:31:58 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:31:58 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:31:58 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:32:00 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:00 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:32:00 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:32:00 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:32:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:32:00 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:32:00 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:32:00 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:32:01 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:32:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:01 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:32:01 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:32:01 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:32:01 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:32:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:32:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:32:01 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:32:01 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:32:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:32:01 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:32:01 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:32:01 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:32:01 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:32:01 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:32:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:01 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:32:06 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:06 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:32:06 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:32:06 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:32:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:32:06 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:32:06 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:32:06 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:32:06 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:32:06 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:32:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:09 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:32:09 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:32:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:32:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:32:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:32:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:32:09 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:32:09 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:32:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:32:26 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:26 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:27 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:32:26Z, a difference of 12988 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:32:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:32:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:32:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:32:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:32:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:34 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:32:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:34 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:32:34Z, a difference of 20715 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:32:34 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:32:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:32:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:32:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:32:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:32:42 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:42 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:42 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:32:42Z, a difference of 28667 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:32:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:32:42 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:42 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:32:42 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:32:42 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:32:42 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:32:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:49 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:32:49Z, a difference of 35049 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:32:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:32:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:32:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:32:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:32:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:32:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:32:49 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:49 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:32:49Z, a difference of 35778 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:32:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:32:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:32:49 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:32:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:32:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:49 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:32:49Z, a difference of 35780 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:32:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:32:49 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:49 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:32:49 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:32:49 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:32:49 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:32:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:51 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:32:51Z, a difference of 37220 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:32:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:32:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:32:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:32:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:32:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:32:52 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:52 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:52 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:32:52Z, a difference of 38346 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:32:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:32:52 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:52 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:32:52 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:32:52 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:32:52 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:32:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:54 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:32:54Z, a difference of 40070 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:32:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:32:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:32:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:32:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:32:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:32:55 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:55 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:55 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:32:55Z, a difference of 41164 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:32:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:32:55 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:55 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:32:55 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:32:55 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:32:55 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:32:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:32:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:56 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:32:56Z, a difference of 42385 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:32:56 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:32:56Z, a difference of 42385 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:32:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:32:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:32:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:32:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:32:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:32:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:32:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:32:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:32:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:32:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:32:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:33:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:02 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:02Z, a difference of 48023 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:11 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:33:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:11 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:11Z, a difference of 57079 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:11 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:33:11 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:11 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:11 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:11Z, a difference of 57089 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:11 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:11 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:11 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:11 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:11 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:33:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:25 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:25Z, a difference of 71662 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:34 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:33:34 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:34 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:34 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:34Z, a difference of 80946 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:34 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:34 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:34 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:34 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:34 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:34 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:33:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:33:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:36 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:36Z, a difference of 82158 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:36 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:36Z, a difference of 82158 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:33:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:37 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:37Z, a difference of 83595 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:33:38 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:33:38 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:38 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:38 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:38 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:38Z, a difference of 84695 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:38 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:38 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:38Z, a difference of 84695 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:38 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:38 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:38 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:38 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:38 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:38 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:38 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:38 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:38 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:33:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:39 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:39Z, a difference of 85588 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:39 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:33:39 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:39 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:33:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:39 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:39Z, a difference of 85814 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:39 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:39 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:39 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:39 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:39 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:39 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:39 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:39Z, a difference of 85816 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:33:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:40 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:40Z, a difference of 86668 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:33:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:33:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:41 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:41Z, a difference of 87544 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:41 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:33:41Z, a difference of 87545 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:33:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:33:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:33:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:33:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:33:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:33:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:33:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:34:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:03 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:34:03Z, a difference of 109996 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:34:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:34:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:34:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:34:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:34:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:34:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:21 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:34:21Z, a difference of 127105 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:34:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:34:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:34:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:34:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:34:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:34:30 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:30 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:30 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:34:30Z, a difference of 136711 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:34:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:34:30 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:30 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:34:30 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:34:30 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:34:30 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:34:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:31 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:34:31Z, a difference of 137784 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:34:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:34:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:34:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:34:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:34:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:34:41 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:41 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:41 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:34:41Z, a difference of 147443 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:34:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:34:41 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:41 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:34:41 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:34:41 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:34:41 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:34:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:42 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:34:42Z, a difference of 148373 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:34:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:34:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:34:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:34:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:34:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:34:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:42 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:34:42Z, a difference of 148375 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:34:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:34:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:34:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:34:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:34:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/classes
2025-03-11 11:34:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:34:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:51 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:51 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:51 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:34:51Z, a difference of 157168 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:34:51 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:34:51Z, a difference of 157168 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:34:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 11:34:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-03-11 11:34:51 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:34:51 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:34:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [POST /error] with attributes [authenticated]
2025-03-11 11:34:51 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 11:34:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:34:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:51 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:34:51 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:52 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/logout
2025-03-11 11:34:52 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:52 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:52 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 11:34:52 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:52 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:34:52 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T11:32:14Z. Current time: 2025-03-11T11:34:52Z, a difference of 158991 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 11:34:52 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-03-11 11:34:52 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:34:52 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:34:52 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [POST /error] with attributes [authenticated]
2025-03-11 11:34:52 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 11:34:52 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:35:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 11:35:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:35:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:35:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 11:35:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 11:35:08 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 11:35:08 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:35:08 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 11:35:08 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:35:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 11:35:09 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:35:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:35:09 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:35:09 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 11:35:09 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:35:09 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:35:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:35:09 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 11:35:09 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:35:09 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:35:11 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 11:35:11 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:35:11 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "salima@test.com"}, Fields: {}, Sort: {}
2025-03-11 11:35:11 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "salima@test.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:35:11 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/logout] with attributes [permitAll]
2025-03-11 11:35:11 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout
2025-03-11 11:35:11 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:35:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 11:35:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:35:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:35:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 11:35:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 11:35:39 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.AlreadyLoggedInException: Vous êtes déjà connecté. Déconnectez-vous d'abord.]
2025-03-11 11:35:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:36:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 11:36:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:36:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:36:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 11:36:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 11:36:15 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.AlreadyLoggedInException: Vous êtes déjà connecté. Déconnectez-vous d'abord.]
2025-03-11 11:36:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:36:34 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-11 11:36:34 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 29400 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 11:36:34 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 11:36:34 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 11:36:34 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-11 11:36:34 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-11 11:36:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 11:36:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 106 ms. Found 5 MongoDB repository interfaces.
2025-03-11 11:36:36 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 11:36:36 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 11:36:36 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 11:36:36 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 11:36:36 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 11:36:36 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2429 ms
2025-03-11 11:36:36 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@7505bd5d], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7493d181]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@400dbcd0], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 11:36:36 [cluster-ClusterId{value='67d02044453e531bf70a0de1', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:244}] to localhost:27017
2025-03-11 11:36:36 [cluster-rtt-ClusterId{value='67d02044453e531bf70a0de1', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:243}] to localhost:27017
2025-03-11 11:36:36 [cluster-ClusterId{value='67d02044453e531bf70a0de1', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21435600}
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 11:36:37 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 11:36:37 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 11:36:37 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:38 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 11:36:38 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 11:36:38 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 11:36:38 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 11:36:38 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 11:36:38 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 11:36:38 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6c0d4e6d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55b41fc9, org.springframework.security.web.context.SecurityContextPersistenceFilter@2babcfcd, org.springframework.security.web.header.HeaderWriterFilter@52e9a01, org.springframework.web.filter.CorsFilter@27319ffd, org.springframework.security.web.authentication.logout.LogoutFilter@6e3b843d, com.redtrack.security.JwtAuthenticationFilter@25e7e561, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@10c7886e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4970e6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@665b1bed, org.springframework.security.web.session.SessionManagementFilter@37b7e83e, org.springframework.security.web.access.ExceptionTranslationFilter@2f8a247c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@50f5ac3d]
2025-03-11 11:36:38 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 11:36:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 11:36:38 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 5.308 seconds (JVM running for 6.839)
2025-03-11 11:36:38 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:36:38 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:36:38 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:245}] to localhost:27017
2025-03-11 11:36:39 [RMI TCP Connection(2)-192.168.8.249] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-11 11:36:39 [RMI TCP Connection(2)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-11 11:36:39 [RMI TCP Connection(2)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-03-11 11:36:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 11:36:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:36:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 11:36:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 11:36:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 11:36:52 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:36:52 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:36:53 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:36:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:36:53 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 11:36:53 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:36:53 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:36:53 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:36:53 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:36:53 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:36:53 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:36:53 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:36:53 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:36:53 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:36:53 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:36:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:36:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:36:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:36:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:36:54 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:36:54 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:36:54 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:36:54 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:36:54 [http-nio-8080-exec-6] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:246}] to localhost:27017
2025-03-11 11:36:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:36:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:36:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:36:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:36:54 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:36:54 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:36:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:36:54 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:54 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:36:54 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:36:54 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:36:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:37:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:37:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:37:02 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:02 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:37:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:37:02 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:02 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:37:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:37:05 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:37:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:37:05 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:37:05 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:05 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:05 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:05 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:05 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:37:05 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:37:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:37:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:37:05 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:05 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:05 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:05 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:05 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:37:05 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:37:05 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:37:05 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:37:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:37:06 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:37:06 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:06 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:06 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:37:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:37:06 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:06 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:06 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:37:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:37:08 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:37:08 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:08 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:08 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:37:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:37:08 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:08 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:08 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:37:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:37:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:37:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:37:09 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:37:09 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:09 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:09 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:09 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:37:09 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:37:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:37:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:37:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:09 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:09 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:09 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:37:09 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:37:09 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:37:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:37:14 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67d0154ee3cf141863aac58a
2025-03-11 11:37:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:37:14 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:37:14 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:37:14 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:14 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:14 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:14 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:14 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:37:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:37:14 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67d0154ee3cf141863aac58a] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:37:14 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67d0154ee3cf141863aac58a
2025-03-11 11:37:14 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:14 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:14 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:37:14 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:37:14 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:37:14 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:14 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:14 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67d0154ee3cf141863aac58a"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:37:14 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "nom" : "testing"}, Fields: {}, Sort: {}
2025-03-11 11:37:14 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "nom" : "testing"} in collection: classes
2025-03-11 11:37:14 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 11:37:14 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:37:14 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:37:14 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:37:14 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:14 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:14 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:37:14 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:37:14 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:14 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:14 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:37:14 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:37:14 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:37:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:37:18 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67d0154ee3cf141863aac58a
2025-03-11 11:37:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:37:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:37:18 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:18 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67d0154ee3cf141863aac58a] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:37:18 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67d0154ee3cf141863aac58a
2025-03-11 11:37:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:37:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:37:18 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:18 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:18 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:18 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:18 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67d0154ee3cf141863aac58a"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:37:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:37:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:37:18 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "nom" : "test"}, Fields: {}, Sort: {}
2025-03-11 11:37:18 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "nom" : "test"} in collection: classes
2025-03-11 11:37:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:37:18 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 11:37:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:37:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:37:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:37:18 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:37:18 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:37:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:37:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:37:18 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:18 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:37:18 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:37:18 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:37:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:42:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:42:27 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:42:27 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:42:27 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:42:27 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:42:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:42:27 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:42:27 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:42:27 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:42:45 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:42:45 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:42:45 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:42:45 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:42:45 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:42:45 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:42:45 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:42:45 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:42:45 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:42:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:42:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:42:46 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:42:46 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:42:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:42:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:42:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:42:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:42:46 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:42:46 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:42:46 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:42:46 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:42:46 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:42:46 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:42:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:42:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:42:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:42:46 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:42:46 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:42:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:42:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:42:48 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:42:48 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:42:48 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:42:48 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:42:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:42:48 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:42:48 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:42:48 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:42:48 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:42:48 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:42:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:42:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:42:50 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:42:50 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:42:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:42:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:42:50 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:42:50 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:42:50 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:42:50 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:42:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:42:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:42:58 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:42:58 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:42:58 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:42:58 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:42:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:42:58 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:42:58 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:42:58 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:42:58 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:42:58 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:43:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:43:00 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:43:00 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:43:00 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:43:00 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:43:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:43:00 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:43:00 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:43:00 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:43:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:43:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:43:02 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:43:02 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:43:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:43:02 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:43:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:43:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:43:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:43:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:43:02 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:43:02 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:43:02 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:43:02 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:43:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:43:02 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:43:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:43:02 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:43:02 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:43:02 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:43:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:43:03 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:43:03 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:43:03 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:43:03 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:43:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:43:03 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:43:03 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:43:03 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:43:03 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:43:03 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:44:31 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:44:31 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:44:31 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:44:31 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:44:31 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:44:31 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:44:31 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:44:31 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:44:31 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:44:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:44:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:44:32 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:44:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:44:32 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:44:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:44:32 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:44:32 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:44:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:44:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:44:32 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:44:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:44:32 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:44:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:44:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:44:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:44:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:44:32 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:44:32 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:44:32 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:44:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:44:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:44:34 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:44:34 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:44:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:44:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:44:34 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:44:34 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:44:34 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:44:34 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:44:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:46:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:46:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:46:44 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:46:44 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:46:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:46:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:46:44 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:46:44 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:46:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:46:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:46:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:46:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:46:49 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:46:49 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:46:49 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:46:49 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:46:49 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:46:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:46:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:46:49 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:46:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:46:49 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:46:49 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:46:49 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:46:49 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:46:49 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:46:49 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:46:49 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:46:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:46:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:46:50 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:46:50 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:46:50 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:46:50 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:46:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:46:50 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:46:50 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:46:50 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:46:51 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:46:51 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:46:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:46:51 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:46:51 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:46:51 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:46:51 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:46:51 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:46:51 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:46:51 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:46:51 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:46:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:46:51 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:46:51 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:46:51 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:46:51 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:46:51 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:46:51 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:46:51 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:46:51 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:46:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:46:52 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:46:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:46:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:46:52 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:46:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:46:52 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:46:52 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:46:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:46:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:46:52 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:46:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:46:57 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:46:57 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:46:57 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:46:57 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:46:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:46:57 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:46:57 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:46:57 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:46:57 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:46:57 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:46:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:46:58 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:46:58 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:46:58 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:46:58 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:46:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:46:58 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:46:58 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:46:58 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:46:58 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:46:58 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:47:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:47:05 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:47:05 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:47:05 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:47:05 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:47:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:47:05 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:05 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:05 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:47:05 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:47:05 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:47:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:47:13 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:47:13 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:47:13 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:47:13 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:47:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:47:13 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:13 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:13 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:47:13 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:47:13 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:47:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:47:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:47:15 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:47:15 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:47:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:47:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:47:15 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:15 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:15 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:47:15 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:47:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:47:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/67d01655e3cf141863aac58f/archive
2025-03-11 11:47:19 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:47:19 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:47:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67d01655e3cf141863aac58f/archive
2025-03-11 11:47:19 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:47:19 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:47:19 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:47:19 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67d01655e3cf141863aac58f/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:47:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67d01655e3cf141863aac58f/archive
2025-03-11 11:47:19 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:19 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:19 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67d01655e3cf141863aac58f"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:47:19 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 11:47:19 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:47:20 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:47:20 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:47:20 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:47:20 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:47:20 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:47:20 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:47:20 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:20 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:20 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:47:20 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:47:20 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:47:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:47:22 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:47:22 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:47:22 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:47:22 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:47:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:47:22 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:22 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:22 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:47:22 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:47:22 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:47:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:47:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:47:26 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:47:26 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:47:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:47:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:47:26 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:26 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:26 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:47:26 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:47:27 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:47:29 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:47:29 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:47:29 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:47:29 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:47:29 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:47:29 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:47:29 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:29 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:47:29 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:47:29 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:47:29 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:48:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:48:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:48:13 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:48:13 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:48:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:48:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:48:13 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:48:13 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:48:13 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:48:13 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:48:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:48:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:48:45 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:48:45 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:48:45 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:48:45 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:48:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:48:45 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:48:45 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:48:45 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:48:45 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:48:45 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:48:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:48:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:48:47 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:48:47 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:48:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:48:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:48:47 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:48:47 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:48:47 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:48:47 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:48:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:48:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/67d01647e3cf141863aac58e/unarchive
2025-03-11 11:48:56 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:48:56 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:48:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67d01647e3cf141863aac58e/unarchive
2025-03-11 11:48:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:48:56 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:48:56 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:48:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67d01647e3cf141863aac58e/unarchive] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:48:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67d01647e3cf141863aac58e/unarchive
2025-03-11 11:48:56 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:48:56 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:48:56 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67d01647e3cf141863aac58e"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:48:56 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 11:48:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:48:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:48:58 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:48:58 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:48:58 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:48:58 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:48:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:48:58 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:48:58 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:48:58 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:48:58 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:48:58 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:49:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:49:00 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:49:00 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:49:00 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:49:00 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:49:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:49:00 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:49:00 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:49:00 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:49:00 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:49:00 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:49:16 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:49:16 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:49:16 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:49:16 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:49:16 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:49:16 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:49:16 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:49:16 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:49:16 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:49:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:49:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:49:34 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:49:34 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:49:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:49:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:49:34 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:49:34 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:49:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:49:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:49:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:49:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:49:41 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:49:41 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:49:41 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:49:41 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:49:41 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:49:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:49:41 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:49:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:49:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:49:41 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:49:41 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:49:41 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:49:41 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:49:41 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:49:41 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:49:41 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:49:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:49:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:49:47 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:49:47 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:49:47 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:49:47 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:49:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:49:47 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:49:47 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:49:47 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:49:47 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:49:47 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:51:24 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:51:24 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:51:24 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:51:24 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:51:24 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:51:24 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:51:24 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:51:24 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:51:24 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:51:24 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:51:24 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:51:34 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:51:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:51:34 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:51:34 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:51:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:51:34 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:51:34 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:51:34 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:51:34 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:51:34 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:51:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:51:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes
2025-03-11 11:51:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:51:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:51:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:51:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:51:54 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:51:54 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:51:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:51:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:51:54 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:51:54 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:51:54 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:51:54 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:51:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:51:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:51:58 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:51:58 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:51:58 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:51:58 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:51:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:51:58 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:51:58 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:51:58 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:51:58 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:51:58 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:52:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:00 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:00 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:52:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:52:00 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:00 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:00 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:52:00 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:52:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:52:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:01 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:01 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:52:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:52:01 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:01 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:52:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:03 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:52:03 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:03 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:03 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:03 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:03 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:03 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:52:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:52:03 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:52:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:52:03 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:03 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:03 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:52:03 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:52:03 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:52:07 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:07 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:07 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:07 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:52:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:52:07 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:07 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:07 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:52:07 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:52:07 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:52:09 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:09 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:52:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:52:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:52:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:52:09 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:52:10 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:10 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:10 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:10 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:52:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:52:10 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:10 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:10 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:52:10 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:52:10 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:52:11 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:11 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:11 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:11 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:52:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:52:11 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:11 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:11 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:52:13 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:13 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:13 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:13 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:52:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:52:13 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:13 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:13 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:52:13 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:52:13 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:52:13 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:13 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:13 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:13 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:13 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:52:13 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:52:13 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:13 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:13 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:14 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:52:14 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:14 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:14 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:14 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:52:14 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:52:14 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:14 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:14 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:52:14 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:52:14 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:52:20 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:20 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:20 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:20 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:52:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:52:20 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:20 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:20 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:52:20 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:52:20 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:52:24 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:24 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:24 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:24 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:52:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:52:24 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:24 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:24 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:52:24 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:52:24 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:52:34 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:52:34 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:52:34 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:52:34 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:52:34 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:52:34 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:52:34 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:34 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:52:34 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:52:34 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:52:34 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:53:34 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:53:34 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:53:34 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:53:34 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:53:34 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:53:34 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:53:34 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:53:34 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:53:34 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:53:34 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:53:34 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:53:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:53:35 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:53:35 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:53:35 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:53:35 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:53:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:53:35 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:53:35 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:53:35 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:53:35 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:53:35 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:54:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:54:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:54:04 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:04 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:54:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:54:04 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:04 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:54:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:54:13 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:54:13 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:13 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:13 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:54:13 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:54:13 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:54:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:54:13 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:54:13 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:54:13 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:54:13 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:13 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:54:13 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:13 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:54:13 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:54:13 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:54:13 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:13 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:13 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:54:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:54:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:54:18 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:18 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:54:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:54:18 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:54:18 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:54:18 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:54:18 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:54:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:54:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/67c81c6d04db3158704a8929/unarchive
2025-03-11 11:54:26 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:54:26 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:54:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67c81c6d04db3158704a8929/unarchive
2025-03-11 11:54:26 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:54:26 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:26 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:26 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67c81c6d04db3158704a8929/unarchive] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:54:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67c81c6d04db3158704a8929/unarchive
2025-03-11 11:54:26 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:54:26 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:54:26 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c81c6d04db3158704a8929"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:54:26 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 11:54:26 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:54:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:54:28 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:54:28 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:28 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:28 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:54:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:54:28 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:54:28 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:54:28 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:54:28 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:54:28 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:54:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:54:38 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:54:38 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:38 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:38 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:54:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:54:38 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:38 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:38 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:54:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:54:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:54:40 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:40 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:54:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:54:40 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:40 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:54:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:54:41 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:54:41 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:54:41 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:54:41 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:41 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:41 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:41 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:54:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:54:41 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:54:41 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:54:41 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:54:41 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:54:41 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:54:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:54:41 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:54:41 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:54:41 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:54:41 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:55:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:55:21 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:55:21 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:55:21 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:55:21 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:55:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:55:21 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:55:21 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:55:21 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:55:22 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:55:22 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:55:22 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:55:22 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:55:22 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:55:22 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:55:22 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:55:22 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:55:22 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:55:22 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:55:22 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:55:22 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:55:22 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:55:22 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:55:22 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:55:22 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:55:22 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:55:22 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:55:22 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:55:22 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:55:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:55:26 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:55:26 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:55:26 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:55:26 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:55:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:55:26 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:55:26 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:55:26 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:55:26 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:55:26 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:55:28 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:55:28 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:55:28 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:55:28 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:55:28 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:55:28 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:55:28 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:55:28 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:55:28 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:55:28 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:55:28 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:55:35 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:55:35 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:55:35 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:55:35 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:55:35 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:55:35 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:55:35 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:55:35 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:55:35 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:55:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:55:44 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:55:44 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:55:44 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:55:44 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:55:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:55:44 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:55:44 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:55:44 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:55:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:55:55 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:55:55 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:55:55 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:55:55 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:55:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:55:55 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:55:55 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:55:55 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:56:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:56:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:56:01 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:56:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:56:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:56:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:56:01 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:56:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:56:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:56:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:56:02 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:56:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:56:02 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:56:02 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:56:02 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:56:02 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:56:02 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:56:02 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:56:02 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:56:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:56:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:56:02 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:56:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:56:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:56:02 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:56:02 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:56:02 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:56:02 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:56:02 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:56:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/67c81c6d04db3158704a8929/archive
2025-03-11 11:56:06 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:56:06 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:56:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67c81c6d04db3158704a8929/archive
2025-03-11 11:56:06 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:56:06 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:56:06 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:56:06 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67c81c6d04db3158704a8929/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:56:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67c81c6d04db3158704a8929/archive
2025-03-11 11:56:06 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:56:06 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:56:06 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c81c6d04db3158704a8929"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:56:06 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 11:56:06 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:56:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:56:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:56:08 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:56:08 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:56:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:56:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:56:08 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:56:08 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:56:08 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:56:08 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:56:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:57:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:57:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:57:31 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:57:31 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:57:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:57:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:57:31 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:57:31 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:57:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:57:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:57:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:57:54 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:57:54 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:57:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:57:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:57:54 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:57:54 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:57:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:58:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:58:00 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:58:00 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:58:00 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:58:00 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:58:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:58:00 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:58:00 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:58:00 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:58:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:58:05 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:58:05 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:58:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 11:58:05 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:58:05 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:58:05 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:58:05 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:58:05 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:58:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:58:05 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:58:05 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:58:05 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:58:05 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:58:05 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 11:58:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 11:58:05 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:58:05 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:58:05 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:58:05 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:58:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/67d01567e3cf141863aac58b
2025-03-11 11:58:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:58:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:58:09 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:58:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:58:09 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:58:09 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:58:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67d01567e3cf141863aac58b
2025-03-11 11:58:09 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:58:09 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:58:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:58:09 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:58:09 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:58:09 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:58:09 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:58:09 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:58:09 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:58:09 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:58:09 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67d01567e3cf141863aac58b] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:58:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67d01567e3cf141863aac58b
2025-03-11 11:58:09 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:58:09 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:58:09 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67d01567e3cf141863aac58b"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:58:09 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "nom" : "salamat"}, Fields: {}, Sort: {}
2025-03-11 11:58:09 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "nom" : "salamat"} in collection: classes
2025-03-11 11:58:09 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 11:58:09 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:58:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:58:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:58:09 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:58:09 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:58:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:58:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:58:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:58:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:58:09 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:58:09 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:58:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:58:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:58:12 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:58:12 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:58:12 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:58:12 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:58:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:58:12 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:58:12 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:58:12 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:58:12 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:58:12 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:58:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:58:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:58:41 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:58:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:58:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:58:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:58:41 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:58:41 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:58:41 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:58:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:58:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:59:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 11:59:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:59:02 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:59:02 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:59:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:59:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 11:59:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:59:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:59:02 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 11:59:02 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:59:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 11:59:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 11:59:05 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 11:59:05 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 11:59:05 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 11:59:05 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 11:59:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 11:59:05 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:59:05 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 11:59:05 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 11:59:05 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 11:59:05 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:04:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:04:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:04:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:04:09 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:00:53Z. Current time: 2025-03-11T12:04:09Z, a difference of 196619 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:04:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:04:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:04:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:04:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:04:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:04:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:31 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/profile
2025-03-11 12:10:31 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:31 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:31 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:10:31 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:31 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:31 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:00:53Z. Current time: 2025-03-11T12:10:31Z, a difference of 578483 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:10:31 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:10:31 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:31 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:10:31 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:10:31 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:10:31 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:10:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:40 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:00:53Z. Current time: 2025-03-11T12:10:40Z, a difference of 587661 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:10:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:10:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:10:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:10:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:10:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:10:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:43 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:00:53Z. Current time: 2025-03-11T12:10:43Z, a difference of 590723 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:10:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:10:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:10:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:10:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:10:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:10:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:44 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:00:53Z. Current time: 2025-03-11T12:10:44Z, a difference of 591865 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:10:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:10:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:10:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:10:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:10:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:10:45 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:10:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:45 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:45 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:00:53Z. Current time: 2025-03-11T12:10:45Z, a difference of 592702 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:10:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:10:45 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:45 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:10:45 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:10:45 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:10:45 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:45 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:00:53Z. Current time: 2025-03-11T12:10:45Z, a difference of 592703 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:10:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:10:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:10:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:10:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:10:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 12:10:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:47 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:00:53Z. Current time: 2025-03-11T12:10:47Z, a difference of 594863 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:10:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:10:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:10:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:10:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:10:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:10:49 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:49 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:49 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:00:53Z. Current time: 2025-03-11T12:10:49Z, a difference of 596598 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:10:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:10:49 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:49 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:10:49 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:10:49 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:10:49 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:10:51 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:51 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:51 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:00:53Z. Current time: 2025-03-11T12:10:51Z, a difference of 598715 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:10:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:10:51 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:51 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:10:51 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:10:51 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:10:51 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:53 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 12:10:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:10:53 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:00:53Z. Current time: 2025-03-11T12:10:53Z, a difference of 600261 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:10:53 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-03-11 12:10:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:10:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:10:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [POST /error] with attributes [authenticated]
2025-03-11 12:10:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:10:53 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:11:25 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/login
2025-03-11 12:11:25 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:11:25 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:11:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 12:11:25 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:11:25 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:11:25 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 12:11:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 12:11:25 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.AlreadyLoggedInException: Vous êtes déjà connecté. Déconnectez-vous d'abord.]
2025-03-11 12:11:25 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:07 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-11 12:13:07 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 23656 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 12:13:07 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 12:13:07 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 12:13:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-11 12:13:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-11 12:13:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 12:13:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 86 ms. Found 5 MongoDB repository interfaces.
2025-03-11 12:13:09 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 12:13:09 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 12:13:09 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 12:13:09 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 12:13:09 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 12:13:09 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1932 ms
2025-03-11 12:13:09 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@75cfe4d8], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@41a5ae59]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@49a8fe70], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 12:13:09 [cluster-ClusterId{value='67d028d5074e4678eabc1b70', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:248}] to localhost:27017
2025-03-11 12:13:09 [cluster-ClusterId{value='67d028d5074e4678eabc1b70', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=32777900}
2025-03-11 12:13:09 [cluster-rtt-ClusterId{value='67d028d5074e4678eabc1b70', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:247}] to localhost:27017
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 12:13:10 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 12:13:10 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 12:13:10 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:11 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 12:13:11 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 12:13:11 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 12:13:11 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 12:13:11 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 12:13:11 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 12:13:11 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@199d291d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1ab0a005, org.springframework.security.web.context.SecurityContextPersistenceFilter@523b4b68, org.springframework.security.web.header.HeaderWriterFilter@7b9e8cfb, org.springframework.web.filter.CorsFilter@2722f045, org.springframework.security.web.authentication.logout.LogoutFilter@6868a235, com.redtrack.security.JwtAuthenticationFilter@653c1f03, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49f04f7f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@446c6f43, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@428da4a5, org.springframework.security.web.session.SessionManagementFilter@99032c5, org.springframework.security.web.access.ExceptionTranslationFilter@608ee1f1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4e34118c]
2025-03-11 12:13:11 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 12:13:11 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 12:13:11 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 4.483 seconds (JVM running for 5.977)
2025-03-11 12:13:11 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:11 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:11 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:249}] to localhost:27017
2025-03-11 12:13:12 [RMI TCP Connection(1)-192.168.8.249] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-11 12:13:12 [RMI TCP Connection(1)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-11 12:13:12 [RMI TCP Connection(1)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-03-11 12:13:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 12:13:26 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:26 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:13:26 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 12:13:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 12:13:27 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:27 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:27 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:27 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:27 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 12:13:27 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:13:27 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:27 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:27 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:27 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:13:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:13:27 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:27 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:27 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:28 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:13:28 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:28 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:28 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:28 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:13:28 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:13:28 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:28 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:28 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:31 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:13:31 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:31 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:31 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:31 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:13:31 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:13:31 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:31 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:31 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:13:32 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:32 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:13:32 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:32 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:32 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:32 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:32 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:13:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:13:32 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:32 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:13:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:13:32 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:32 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:32 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:13:32 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:13:32 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 12:13:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:34 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:34 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:13:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 12:13:34 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:34 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:34 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 12:13:34 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:13:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:13:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:37 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:37 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:13:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:13:37 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:37 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:13:38 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:38 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:38 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:13:38 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:38 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:13:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:13:38 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:38 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:38 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:13:38 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:13:38 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:38 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:38 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:38 [http-nio-8080-exec-10] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:250}] to localhost:27017
2025-03-11 12:13:38 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:13:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:13:38 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:38 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:38 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 12:13:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:40 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:13:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 12:13:40 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:40 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:40 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 12:13:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:13:41 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:13:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:43 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:43 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:13:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:13:43 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:43 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:43 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:13:43 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:13:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:13:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67d01567e3cf141863aac58b
2025-03-11 12:13:47 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:47 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:47 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:47 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:47 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:47 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:47 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:13:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:13:47 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67d01567e3cf141863aac58b] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:13:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67d01567e3cf141863aac58b
2025-03-11 12:13:47 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:47 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:47 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:13:47 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:13:47 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:47 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:47 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:47 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67d01567e3cf141863aac58b"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:13:47 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "nom" : "salam"}, Fields: {}, Sort: {}
2025-03-11 12:13:47 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "nom" : "salam"} in collection: classes
2025-03-11 12:13:47 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 12:13:47 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:13:47 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:47 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:47 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:47 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:13:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:13:47 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:47 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:13:47 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:13:47 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:13:47 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:13:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:13:58 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:13:58 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:58 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:58 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:13:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:13:58 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:13:58 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:13:58 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:14:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:14:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:14:00 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:14:00 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:14:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:14:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:14:00 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:14:00 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:14:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:14:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:14:04 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:14:04 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:14:04 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:14:04 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:14:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:14:04 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:14:04 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:14:04 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:21:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:21:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:21:41 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:21:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:21:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:21:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:21:41 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:21:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:21:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:21:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:21:48 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:21:48 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:21:48 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:21:48 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:21:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:21:48 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:21:48 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:21:48 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:22:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:22:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:22:02 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:22:02 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:22:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:22:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:22:02 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:22:02 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:22:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:22:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:22:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:22:25 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:22:25 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:22:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:22:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:22:25 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:22:25 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:22:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:22:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:22:26 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:22:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:22:26 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:22:26 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:22:26 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:22:26 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:22:26 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:22:26 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:22:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:22:26 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:22:26 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:22:26 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:22:26 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:22:26 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:22:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:22:26 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:22:26 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:22:26 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:22:26 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:22:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:22:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:22:28 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:22:28 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:22:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:22:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:22:28 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:22:28 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:22:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:22:28 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/formateurs
2025-03-11 12:22:28 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:22:28 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:22:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:22:29 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:22:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:22:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:22:29 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:22:29 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:22:29 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:22:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:22:29 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:22:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:22:29 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:22:29 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:22:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:22:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:22:29 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:22:29 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:22:29 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:22:29 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:22:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:22:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:23:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:23:45 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:23:45 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:23:45 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:23:45 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:23:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:23:45 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:23:45 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:23:45 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:23:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:23:48 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:23:48 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:23:48 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:23:48 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:23:48 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:23:48 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:23:48 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:23:48 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:23:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:23:48 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:23:48 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:23:48 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:23:48 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:23:48 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:23:48 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:23:48 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:23:48 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:23:48 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:23:49 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:26:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:26:41 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:26:41 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:26:41 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:41 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:26:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:26:41 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:26:41 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:41 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:26:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:26:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:26:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:26:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:26:43 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:26:43 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:26:43 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:43 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:26:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:26:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:26:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:26:43 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:26:43 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:26:43 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:26:43 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:43 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:26:43 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:26:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:26:44 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:26:44 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:26:44 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:26:44 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:44 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:26:44 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:26:44 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:26:44 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:44 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:26:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:26:45 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:26:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:26:45 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:26:45 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:26:45 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:45 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:26:45 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:45 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:26:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:26:45 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:26:45 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:26:45 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:26:45 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:26:46 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:26:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:26:46 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:26:46 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:26:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:26:48 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 12:26:48 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:26:48 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:26:48 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:48 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:26:48 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 12:26:48 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:26:48 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:26:48 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 12:26:48 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:26:48 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:26:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:26:52 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:26:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:26:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:52 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:26:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:26:52 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:26:52 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:26:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:26:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:26:52 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:26:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 12:26:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:26:56 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:26:56 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:26:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:26:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 12:26:56 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:26:56 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:26:56 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 12:26:56 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:26:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:27:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:27:23 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:27:23 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:27:23 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:27:23 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:27:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:27:23 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:23 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:23 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:27:23 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:27:23 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:27:28 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 12:27:28 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:27:28 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:27:28 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:27:28 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:27:28 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 12:27:28 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:28 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:28 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 12:27:28 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:27:28 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:27:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/67c5b400850fed6db51ff050/unarchive
2025-03-11 12:27:33 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:27:33 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:27:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67c5b400850fed6db51ff050/unarchive
2025-03-11 12:27:33 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:27:33 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:27:33 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:27:33 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67c5b400850fed6db51ff050/unarchive] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:27:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67c5b400850fed6db51ff050/unarchive
2025-03-11 12:27:33 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:33 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:33 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5b400850fed6db51ff050"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:27:33 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 12:27:33 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:27:38 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:27:38 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:27:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:27:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:27:38 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:27:38 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:27:38 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:38 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:27:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:27:38 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:27:44 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/67c5b400850fed6db51ff050/archive
2025-03-11 12:27:44 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:27:44 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:27:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67c5b400850fed6db51ff050/archive
2025-03-11 12:27:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:27:44 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:27:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:27:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67c5b400850fed6db51ff050/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:27:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67c5b400850fed6db51ff050/archive
2025-03-11 12:27:44 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:44 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5b400850fed6db51ff050"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:27:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 12:27:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:27:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 12:27:46 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:27:46 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:27:46 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:27:46 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:27:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 12:27:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:46 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 12:27:46 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:27:46 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:27:48 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:27:48 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:27:48 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:27:48 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:27:48 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:27:48 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:27:48 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:48 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:48 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:27:48 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:27:48 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:27:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 12:27:52 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:27:52 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:27:52 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:27:52 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:27:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 12:27:52 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:52 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:52 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 12:27:52 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:27:53 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:27:57 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67c5b400850fed6db51ff050/unarchive
2025-03-11 12:27:57 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:27:57 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:27:57 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:27:57 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67c5b400850fed6db51ff050/unarchive] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:27:57 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67c5b400850fed6db51ff050/unarchive
2025-03-11 12:27:57 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:57 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:57 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5b400850fed6db51ff050"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:27:57 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 12:27:57 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:27:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:27:59 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:27:59 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:27:59 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:27:59 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:27:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:27:59 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:59 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:27:59 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:27:59 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:27:59 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:28:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 12:28:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:28:01 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:01 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:28:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 12:28:01 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:28:01 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:28:01 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 12:28:01 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:28:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:28:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:28:14 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:28:14 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:14 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:14 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:28:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:28:14 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:28:14 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:28:14 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:28:14 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:28:14 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:28:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes/archived
2025-03-11 12:28:29 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:28:29 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:28:29 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 12:28:29 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:28:29 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:29 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:29 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:28:29 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 12:28:29 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:28:29 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:28:29 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 12:28:29 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:28:29 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:28:38 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:28:38 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:28:38 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:38 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:38 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:28:38 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:28:38 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:38 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:38 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:28:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:28:39 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:28:39 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:39 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:28:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:28:39 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:28:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:28:39 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:39 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:28:39 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:28:39 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:39 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:28:39 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:28:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:28:39 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:39 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:28:39 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:28:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:28:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:28:50 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:50 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:28:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:28:50 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:50 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:28:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:28:51 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:28:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:28:51 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:28:51 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:51 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:51 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:51 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:28:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:28:51 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:51 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:51 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:28:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:28:51 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:28:51 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:28:51 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:28:51 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:28:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:51 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:28:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:28:58 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:28:58 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:58 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:58 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:28:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:28:58 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:28:58 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:28:58 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:29:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:29:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:29:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:29:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:29:01 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:29:01 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:29:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:29:01 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:29:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:29:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:29:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:29:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:29:01 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:29:01 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:29:01 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:29:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:29:01 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:29:01 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:29:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:29:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:29:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:29:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:29:02 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:29:02 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:29:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:29:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:29:02 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:29:02 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:29:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:29:19 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:29:19 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:29:19 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:29:19 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:29:19 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:29:19 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:29:20 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:29:20 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:29:20 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:29:20 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:29:20 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:29:20 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:29:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:29:20 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:29:20 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:29:20 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:29:20 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:29:20 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:29:20 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:29:20 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:32:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:32:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:32:29 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:32:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:32:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:32:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:32:29 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:32:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:32:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:32:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:32:58 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:32:58 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:32:58 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:32:58 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:32:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:32:58 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:32:58 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:32:58 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:33:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:33:14 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:33:14 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:33:14 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:14 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:33:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:33:14 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:33:14 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:14 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:33:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:33:15 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:33:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:33:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:15 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:33:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:33:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:33:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:15 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:33:16 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:33:16 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:33:16 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:33:16 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:33:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:33:16 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:33:16 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:33:16 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:33:16 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:16 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:33:16 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:33:16 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:33:16 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:33:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:33:16 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:33:16 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:33:16 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:33:19 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:33:19 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:33:19 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:33:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:19 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:33:19 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:33:19 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:33:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:19 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:33:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/apprenants
2025-03-11 12:33:20 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:33:20 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:33:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:33:20 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:33:20 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:33:20 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 12:33:20 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:33:20 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:33:20 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:20 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:33:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:33:20 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:33:20 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:20 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:33:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 12:33:20 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:33:20 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:33:20 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:33:20 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:33:20 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:33:20 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:34:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:34:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:34:56 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:34:56 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:34:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:34:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:34:56 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:34:56 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:34:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:34:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 12:34:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:34:59 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:34:59 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:34:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:34:59 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:34:59 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:34:59 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:34:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:34:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 12:34:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:34:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:34:59 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:34:59 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:34:59 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:34:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:34:59 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:34:59 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:34:59 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:34:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:35:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:35:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:35:01 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:35:01 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:35:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:35:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:35:01 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:35:01 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:35:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:35:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:35:03 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:35:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:35:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:35:03 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:35:03 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:35:03 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:35:03 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:35:03 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:35:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:35:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:35:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:35:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:35:03 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:35:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:35:03 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:35:03 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:35:03 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:35:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:35:03 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:36:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:36:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:36:40 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:36:40 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:36:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:36:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:36:40 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:36:40 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:36:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:36:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 12:36:41 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:36:41 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:36:41 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:36:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:36:41 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:36:41 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:36:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 12:36:41 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:36:41 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:36:41 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:36:41 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:36:41 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:36:41 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:36:41 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:36:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:36:41 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:36:41 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:36:41 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:36:41 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:37:21 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:21 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:37:21 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:37:21 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:37:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:37:21 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:37:21 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:37:21 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:37:26 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:26 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:37:26 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:37:26 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:37:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:37:26 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:37:26 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:37:26 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:30 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:37:30 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:30 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:30 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:30Z, a difference of 3622 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:30 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:30 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:30 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:30 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:30 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:30 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:37:31 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:31 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:31 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:31Z, a difference of 4851 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:31 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:31 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:31 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:31 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:31 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:31 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:37:31 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:31 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:31 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:31Z, a difference of 4857 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:31 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:31 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:31 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:31 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:31 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:31 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:33 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:37:33 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:33 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:33 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:33Z, a difference of 6934 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:33 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:33 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:33 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:33 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:33 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:33 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 12:37:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:35 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:35Z, a difference of 8033 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:35 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:35Z, a difference of 8033 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:37:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:37 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:37Z, a difference of 10239 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:42 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:37:42 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:42 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:42 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:42Z, a difference of 15690 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:42 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:42 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:42 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:42 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:42 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:42 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:53 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:37:53 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:53 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:53 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:53Z, a difference of 26169 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:53 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:53 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:53 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:53 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:53 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:53 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:37:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:37:54 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:54 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:54 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:54Z, a difference of 27531 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:54 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:54Z, a difference of 27531 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:54 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:54 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:54 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:54 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:54 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:37:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:56 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:56Z, a difference of 29515 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 12:37:57 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:37:57 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:57 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:57 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:57Z, a difference of 30880 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:57 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:57 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:57 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:57 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:57 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:57 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:37:57 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:37:57Z, a difference of 30882 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:37:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:37:57 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:37:57 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:37:57 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:37:57 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:37:57 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:38:06 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:06 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:06 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:38:06Z, a difference of 39245 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:38:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:38:06 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:06 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:38:06 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:38:06 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:38:06 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:38:06 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:07 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:07 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:38:07Z, a difference of 40000 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:38:07 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:38:07 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:07 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:38:07 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:38:07 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:38:07 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:07 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:38:07 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:07 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:07 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:38:07Z, a difference of 40534 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:38:07 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:38:07 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:07 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:38:07 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:38:07 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:38:07 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:38:08 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:38:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:08 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:08 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:38:08Z, a difference of 41447 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:38:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:38:08 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:08 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:38:08 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:38:08 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:38:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:08 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:08 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:38:08Z, a difference of 41450 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:38:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:38:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:38:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:38:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:38:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:38:09 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:09 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:09 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:38:09Z, a difference of 42893 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:38:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:38:09 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:09 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:38:09 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:38:09 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:38:09 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:11 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:38:11 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:38:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:11 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:11 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:38:11Z, a difference of 44178 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:38:11 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:38:11Z, a difference of 44178 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:38:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:38:11 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:38:11 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:11 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:38:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:38:11 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:38:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:38:11 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:38:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:38:11 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:12 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:38:12 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:12 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:12 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:38:12Z, a difference of 45699 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:38:12 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 12:38:12 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:12 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:38:12 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 12:38:12 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:38:12 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:14 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/logout
2025-03-11 12:38:14 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:14 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 12:38:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:14 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T12:37:27Z. Current time: 2025-03-11T12:38:14Z, a difference of 47047 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 12:38:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-03-11 12:38:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:38:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:38:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [POST /error] with attributes [authenticated]
2025-03-11 12:38:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 12:38:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:38:38 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 384 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 12:38:38 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-11 12:38:38 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 12:38:38 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 12:38:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-11 12:38:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-11 12:38:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 12:38:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 100 ms. Found 5 MongoDB repository interfaces.
2025-03-11 12:38:40 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 12:38:40 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 12:38:40 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 12:38:40 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 12:38:40 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 12:38:40 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1866 ms
2025-03-11 12:38:40 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@7f6fbbd6], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7688fd3]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@7120c7d5], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 12:38:40 [cluster-ClusterId{value='67d02ed09e6e8f3c81240bc9', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:252}] to localhost:27017
2025-03-11 12:38:40 [cluster-ClusterId{value='67d02ed09e6e8f3c81240bc9', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22414800}
2025-03-11 12:38:40 [cluster-rtt-ClusterId{value='67d02ed09e6e8f3c81240bc9', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:251}] to localhost:27017
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 12:38:41 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 12:38:41 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:38:41 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 12:38:41 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 12:38:41 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6004c765, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@72f3c2d8, org.springframework.security.web.context.SecurityContextPersistenceFilter@29182d46, org.springframework.security.web.header.HeaderWriterFilter@59965c8a, org.springframework.web.filter.CorsFilter@57a9a6ea, org.springframework.security.web.authentication.logout.LogoutFilter@61343cc, com.redtrack.security.JwtAuthenticationFilter@79e64d9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ab1dbbd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2355249e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@77ca3e94, org.springframework.security.web.session.SessionManagementFilter@6ccac78e, org.springframework.security.web.access.ExceptionTranslationFilter@7efda926, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f86829b]
2025-03-11 12:38:42 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 12:38:42 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 12:38:42 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 4.223 seconds (JVM running for 5.044)
2025-03-11 12:38:42 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:38:42 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:38:42 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:253}] to localhost:27017
2025-03-11 12:38:42 [RMI TCP Connection(3)-192.168.8.249] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-11 12:38:42 [RMI TCP Connection(3)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-11 12:38:42 [RMI TCP Connection(3)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-03-11 12:39:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 12:39:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:39:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 12:39:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 12:39:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 12:39:32 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:32 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:32 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:32 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 12:39:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:39:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:39:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:39:32 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:39:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:39:32 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:39:33 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:39:33 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:39:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:39:33 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:39:33 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:33 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:33 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:33 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:33 [http-nio-8080-exec-4] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:254}] to localhost:27017
2025-03-11 12:39:33 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:39:33 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:39:33 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:39:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:39:33 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:33 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:33 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:39:33 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:39:33 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:39:33 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:39:33 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:33 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:39:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:39:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:39:35 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:35 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:39:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:39:35 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:35 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:39:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 12:39:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:39:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:39:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:39:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:36 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:36 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:39:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:39:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:39:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 12:39:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:36 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:39:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:36 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:39:36 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:39:36 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:39:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:39:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:39:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:39:44 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:44 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:39:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:39:44 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:39:44 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:39:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:43:13 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:13 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:13 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:13 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:43:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:43:13 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:13 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:13 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:43:17 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:17 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:43:17 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:17 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:17 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:17 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:17 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:17 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:43:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:43:17 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:17 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:43:17 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:43:17 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:17 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:17 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:17 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:17 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:43:17 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:43:17 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:43:19 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:19 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:19 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:19 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:43:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:43:19 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:19 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:19 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:43:20 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:43:20 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:20 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:20 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:20 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:20 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:20 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:43:20 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:43:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:43:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:43:20 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:20 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:20 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:20 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:20 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:43:20 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:20 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:20 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:43:21 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:21 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:21 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:21 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:43:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:43:21 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:21 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:21 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 12:43:22 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:22 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:43:22 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:22 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:22 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:22 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:22 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:22 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:43:22 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:43:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 12:43:22 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:43:22 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:22 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:22 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:43:22 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:22 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:22 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:22 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 12:43:23 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 12:43:23 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 12:43:23 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 12:43:23 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 12:43:23 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 12:43:23 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 12:43:23 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 12:43:23 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 12:43:23 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 12:43:23 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 12:43:23 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:23 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:23 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:23 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 12:43:23 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 12:43:23 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:23 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:23 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:43:23 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 12:43:23 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:23 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-9] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:255}] to localhost:27017
2025-03-11 12:43:23 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:43:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 12:43:23 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:43:23 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5e0292240fc682069ff7c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:43:23 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 12:43:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 12:43:23 [http-nio-8080-exec-2] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:256}] to localhost:27017
2025-03-11 12:43:23 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:43:23 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 12:43:23 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:43:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 12:43:23 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb94850fed6db51ff0ad"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-1] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:7, serverValue:257}] to localhost:27017
2025-03-11 12:43:23 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-6] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:8, serverValue:258}] to localhost:27017
2025-03-11 12:43:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 12:43:23 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:43:23 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:43:23 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:43:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 12:43:23 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:43:23 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:43:23 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:43:23 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:42 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:44:42 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:42 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:42 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:42 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:44:42 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:44:42 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:42 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:42 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:44:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:43 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:43 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:44:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:44:43 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:44:43 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:43 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:44:43 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:43 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:43 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:44:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:44:43 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:43 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:44:45 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:45 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:45 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:45 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:44:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:44:45 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:45 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:45 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 12:44:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:44:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:46 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:46 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:46 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:44:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 12:44:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:44:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:44:46 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:46 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:44:46 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 12:44:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:46 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:46 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 12:44:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:46 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 12:44:46 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 12:44:46 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:46 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:46 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 12:44:46 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 12:44:46 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:44:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 12:44:46 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb94850fed6db51ff0ad"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:46 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:46 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:44:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 12:44:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:46 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:46 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:46 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:44:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 12:44:46 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:44:46 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 12:44:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:46 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5e0292240fc682069ff7c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:44:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 12:44:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:44:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:46 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:46 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:46 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:44:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:56 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:56 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:44:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:44:56 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:56 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:44:58 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:44:58 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:44:58 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:58 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:58 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:58 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:58 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:44:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:44:58 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:58 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:44:58 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:44:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:44:58 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:44:58 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:44:58 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:44:58 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:44:58 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:44:58 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:45:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:01 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:01 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:45:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:45:01 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:01 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:45:02 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:45:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:02 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:02 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:02 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:45:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:45:02 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:45:02 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:02 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:02 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:45:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:45:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:02 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes/archived
2025-03-11 12:45:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:04 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:04 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes/archived] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes/archived
2025-03-11 12:45:04 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:04 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:04 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : false}, Fields: {}, Sort: {}
2025-03-11 12:45:04 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : false} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:45:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67c81c6d04db3158704a8929/unarchive
2025-03-11 12:45:08 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:08 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:08 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:08 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67c81c6d04db3158704a8929/unarchive] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67c81c6d04db3158704a8929/unarchive
2025-03-11 12:45:08 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:08 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:08 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c81c6d04db3158704a8929"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:45:08 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 12:45:08 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:11 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:45:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:11 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:11 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:45:11 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:45:11 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:11 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:12 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:45:12 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:12 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:12 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:12 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:12 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:45:12 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:12 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:12 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:45:12 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:12 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:45:12 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:12 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:12 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:12 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:45:12 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:45:12 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:12 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:12 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:13 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:14 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:45:14 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:14 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:14 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:14 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:45:14 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:45:14 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:14 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:14 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 12:45:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:15 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:15 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 12:45:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:45:15 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:15 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:45:15 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:15 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:45:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:45:15 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:15 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:15 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 12:45:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 12:45:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:15 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 12:45:15 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:15 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:15 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:15 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 12:45:15 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:15 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:15 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 12:45:15 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 12:45:15 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 12:45:15 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:15 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:15 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 12:45:15 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:15 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:15 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb94850fed6db51ff0ad"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:15 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5e0292240fc682069ff7c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 12:45:15 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 12:45:15 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 12:45:15 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 12:45:15 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:15 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 12:45:15 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:15 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:15 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 12:45:15 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:15 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:15 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:15 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:15 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:15 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:17 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:45:17 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:17 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:17 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:17 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:45:17 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:45:17 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:17 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:17 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:22 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 12:45:22 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:22 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:22 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:22 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:22 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 12:45:22 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:22 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:22 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 12:45:22 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:45:22 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:45:22 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:22 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:22 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:22 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:45:22 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:45:22 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:22 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:22 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:23 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:29 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/classes/67c81c6d04db3158704a8929/archive
2025-03-11 12:45:29 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:29 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:29 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:29 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/classes/67c81c6d04db3158704a8929/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:29 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/classes/67c81c6d04db3158704a8929/archive
2025-03-11 12:45:29 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:29 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:29 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c81c6d04db3158704a8929"} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 12:45:29 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, nom, niveau, annee, active, etapes, users, _class]
2025-03-11 12:45:29 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:31 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:45:31 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:31 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:31 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:31 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:45:31 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:45:31 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:31 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:31 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:33 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:45:33 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:33 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:33 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:33 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:33 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:45:33 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:33 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:33 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:45:33 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:33 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:45:33 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:33 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:33 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:33 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:45:33 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:45:33 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:33 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:33 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:33 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:45:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:35 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:35 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:45:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:45:35 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:35 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 12:45:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:45:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:36 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:45:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 12:45:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:45:36 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:36 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:45:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 12:45:36 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 12:45:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 12:45:36 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 12:45:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 12:45:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 12:45:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:36 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:36 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:36 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:36 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:36 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:36 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 12:45:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 12:45:36 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5e0292240fc682069ff7c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 12:45:36 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:36 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 12:45:36 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 12:45:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 12:45:36 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:36 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb94850fed6db51ff0ad"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:36 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 12:45:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:45:36 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:45:36 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:45:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 12:45:36 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:45:36 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:45:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:36 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:45:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:46:07 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:07 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:07 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:07 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:46:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:46:07 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:07 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:07 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:46:08 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:08 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:08 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:08 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:46:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:46:08 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:08 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:46:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:08 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:46:08 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:08 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:08 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:46:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:46:08 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:08 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:08 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:12 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:46:12 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:12 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:12 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:12 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:46:12 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:46:12 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:12 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:12 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:13 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 12:46:13 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:46:13 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:13 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:13 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:13 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:46:13 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 12:46:13 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:46:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:46:13 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:46:13 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:13 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:13 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 12:46:13 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 12:46:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:13 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 12:46:13 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 12:46:13 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:13 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:13 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 12:46:13 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 12:46:13 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:13 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:13 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:13 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:13 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:13 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:13 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:13 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:46:13 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:46:13 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5e0292240fc682069ff7c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:46:13 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:46:13 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 12:46:13 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 12:46:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 12:46:13 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 12:46:13 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:46:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:46:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 12:46:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 12:46:13 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb94850fed6db51ff0ad"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:13 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:13 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 12:46:13 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:13 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:13 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:46:13 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 12:46:13 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:13 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:13 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:13 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:13 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:13 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:46:57 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:57 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:57 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:57 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:46:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:46:57 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:57 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:57 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 12:46:58 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:46:58 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:46:58 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:58 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:58 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:58 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:58 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:46:58 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:46:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 12:46:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:46:58 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:58 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:46:58 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:46:58 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:58 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:46:58 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:46:58 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:46:58 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:47:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:47:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:47:00 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:47:00 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:47:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:47:00 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:47:00 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:47:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 12:47:01 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:47:01 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:47:01 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:47:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 12:47:01 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 12:47:01 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 12:47:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:47:01 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:47:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 12:47:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 12:47:01 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:47:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:47:01 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:47:01 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 12:47:01 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:47:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 12:47:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 12:47:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 12:47:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:47:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:47:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:47:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 12:47:01 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:47:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 12:47:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:47:01 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:47:01 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:47:01 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:47:01 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:47:01 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:47:01 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:47:01 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:47:01 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 12:47:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:47:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 12:47:01 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:47:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 12:47:01 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb94850fed6db51ff0ad"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5e0292240fc682069ff7c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:47:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:47:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 12:47:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 12:47:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:47:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 12:47:01 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:47:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:47:01 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:47:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 12:47:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 12:47:01 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 12:47:01 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 12:47:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 12:47:01 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 12:47:01 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 12:47:01 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:47:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:47:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 12:47:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:11:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/profile
2025-03-11 13:11:50 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:11:50 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:11:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:11:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:11:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:11:50 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:03:32Z. Current time: 2025-03-11T13:11:50Z, a difference of 498598 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:11:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:11:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:11:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:11:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:11:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:11:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:12:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:12:08 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:08 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:08 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:03:32Z. Current time: 2025-03-11T13:12:08Z, a difference of 516727 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:12:08 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:03:32Z. Current time: 2025-03-11T13:12:08Z, a difference of 516727 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:12:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:12:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:12:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:08 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:12:08 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:12:08 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:12:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:12:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:12:08 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:12:08 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:11 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:12:11 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:11 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:11 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:03:32Z. Current time: 2025-03-11T13:12:11Z, a difference of 519066 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:12:11 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:12:11 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:11 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:12:11 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:12:11 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:12:11 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:11 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/classes
2025-03-11 13:12:11 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:11 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:12:11 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 13:12:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:11 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:11 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:03:32Z. Current time: 2025-03-11T13:12:11Z, a difference of 519987 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:12:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:12:11 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:11 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:12:11 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:12:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:11 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:12:11 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:11 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:03:32Z. Current time: 2025-03-11T13:12:11Z, a difference of 519988 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:12:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:12:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:12:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:12:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:12:11 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:12:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:13 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:03:32Z. Current time: 2025-03-11T13:12:13Z, a difference of 521469 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:12:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:12:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:12:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:12:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:12:13 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 13:12:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:15 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:03:32Z. Current time: 2025-03-11T13:12:15Z, a difference of 523034 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:12:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-03-11 13:12:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:12:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [POST /error] with attributes [authenticated]
2025-03-11 13:12:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:12:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/login
2025-03-11 13:12:23 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:23 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 13:12:23 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:23 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:12:23 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 13:12:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 13:12:23 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.AlreadyLoggedInException: Vous êtes déjà connecté. Déconnectez-vous d'abord.]
2025-03-11 13:12:23 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:36 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-11 13:12:36 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 35084 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 13:12:36 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 13:12:36 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 13:12:36 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-11 13:12:36 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-11 13:12:37 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 13:12:37 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 88 ms. Found 5 MongoDB repository interfaces.
2025-03-11 13:12:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 13:12:38 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 13:12:38 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 13:12:38 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 13:12:38 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 13:12:38 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2003 ms
2025-03-11 13:12:39 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@7416e59], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@485bff50]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6216876f], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 13:12:39 [cluster-rtt-ClusterId{value='67d036c6afb99c3f4de087d0', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:259}] to localhost:27017
2025-03-11 13:12:39 [cluster-ClusterId{value='67d036c6afb99c3f4de087d0', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:260}] to localhost:27017
2025-03-11 13:12:39 [cluster-ClusterId{value='67d036c6afb99c3f4de087d0', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22337400}
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 13:12:39 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 13:12:39 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 13:12:39 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:40 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 13:12:40 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 13:12:40 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 13:12:40 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 13:12:40 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 13:12:40 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 13:12:40 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7d73b830, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3522ddf6, org.springframework.security.web.context.SecurityContextPersistenceFilter@280ca2b3, org.springframework.security.web.header.HeaderWriterFilter@690f8a6f, org.springframework.web.filter.CorsFilter@37a7f1af, org.springframework.security.web.authentication.logout.LogoutFilter@2ff2268e, com.redtrack.security.JwtAuthenticationFilter@3e4bd5ba, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22195aba, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1aa6f31b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1442c551, org.springframework.security.web.session.SessionManagementFilter@4fd940af, org.springframework.security.web.access.ExceptionTranslationFilter@2463716a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ec900b]
2025-03-11 13:12:40 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 13:12:40 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 13:12:40 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 4.811 seconds (JVM running for 5.826)
2025-03-11 13:12:40 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:40 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:40 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:261}] to localhost:27017
2025-03-11 13:12:41 [RMI TCP Connection(1)-192.168.8.249] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-11 13:12:41 [RMI TCP Connection(1)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-11 13:12:41 [RMI TCP Connection(1)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-03-11 13:12:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 13:12:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:12:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 13:12:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 13:12:41 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:41 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:41 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 13:12:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:12:41 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:41 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:41 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:41 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:12:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:12:41 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:41 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:41 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:12:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:43 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:43 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:43 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:12:43 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:43 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:43 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:12:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:12:43 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:12:43 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:12:43 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:43 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:43 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:43 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:12:43 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:44 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:12:44 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:44 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:44 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:44 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:12:44 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:12:44 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:44 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:44 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:45 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:12:45 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:45 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:45 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:12:45 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:45 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:12:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:12:46 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:12:46 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:46 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-8] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:262}] to localhost:27017
2025-03-11 13:12:46 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:12:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:12:46 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:46 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:46 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 13:12:46 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:12:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:46 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:12:46 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:46 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:12:46 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:12:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:12:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:46 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:46 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:46 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:46 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:46 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:46 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:46 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-10] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:263}] to localhost:27017
2025-03-11 13:12:46 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:12:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:12:46 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:12:46 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:12:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:12:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 13:12:46 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:12:46 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:12:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:12:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:12:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5e0292240fc682069ff7c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:12:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:12:46 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb94850fed6db51ff0ad"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-10] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:7, serverValue:264}] to localhost:27017
2025-03-11 13:12:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:46 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:12:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:12:46 [http-nio-8080-exec-2] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:8, serverValue:265}] to localhost:27017
2025-03-11 13:12:46 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:12:46 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:12:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:12:46 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:12:46 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:12:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:46 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:46 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:12:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:13:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:13:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:13:40 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:13:40 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:13:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:13:40 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:13:40 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:13:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:13:41 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:13:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:13:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:13:41 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:13:41 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:41 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:13:41 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:13:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:13:41 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:13:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:13:41 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:13:41 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:41 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:41 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:41 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:13:41 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:13:42 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:13:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:13:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:13:42 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 13:13:42 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:13:42 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:13:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:13:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:13:42 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:13:42 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:13:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:13:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:13:42 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:13:42 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:13:42 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:13:42 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:13:42 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:13:42 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:13:42 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:13:42 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:13:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:13:42 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:13:42 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 13:13:42 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:13:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:13:42 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:13:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:13:42 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5e0292240fc682069ff7c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:13:42 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:13:42 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:13:42 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb94850fed6db51ff0ad"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:13:42 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:13:42 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:13:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:13:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:13:42 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:13:42 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:13:42 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:13:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:13:42 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:13:42 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:13:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:13:42 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:13:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:13:42 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:30:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:01 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:01 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:30:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:30:01 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:01 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:30:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:32 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:30:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:30:32 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:37 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/formateurs
2025-03-11 13:30:37 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:30:37 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:37 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:37 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:37 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:30:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:37 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:37 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:37 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:30:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:30:37 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:37 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:37 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:30:37 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:37 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:37 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:30:37 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:30:39 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:39 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:39 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:39 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:30:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:30:39 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:39 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:39 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:30:40 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:30:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:40 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:40 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:40 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:30:40 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:30:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:30:40 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:30:40 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:40 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:40 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 13:30:40 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:30:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:40 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:40 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:40 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:30:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:30:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:30:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:40 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:30:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:40 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:40 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:40 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:40 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:40 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:30:40 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 13:30:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb94850fed6db51ff0ad"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5e0292240fc682069ff7c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:30:40 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:30:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:30:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:40 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:40 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:30:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:30:40 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:40 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:40 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:40 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:30:40 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:40 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:40 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:40 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:30:52 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:52 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:52 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:52 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:30:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:30:52 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:52 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:52 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:30:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:54 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:30:54 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:54 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:54 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:30:54 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:30:54 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:30:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:30:54 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:54 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 13:30:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:30:54 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:30:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:54 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:54 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:54 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:30:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 13:30:54 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:30:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:54 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:30:54 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:54 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb94850fed6db51ff0ad"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:30:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:54 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:54 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:54 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:54 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:54 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:54 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:30:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:30:54 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:30:54 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:30:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:30:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5e0292240fc682069ff7c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:30:54 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:30:54 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:54 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:30:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:30:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:30:54 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:30:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:54 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:30:54 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:31:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:31:00 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:31:00 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:31:00 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:00 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:31:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:31:00 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:31:00 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:00 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:31:01 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:31:01 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:31:01 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:31:01 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:31:01 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:31:01 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:31:01 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:31:01 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:31:01 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:31:01 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:31:01 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:31:01 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:31:01 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:31:01 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:31:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 13:31:01 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:31:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:31:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:31:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:31:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:31:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:31:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:31:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:31:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:31:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:31:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:31:01 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:31:01 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:31:01 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:31:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:31:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:31:01 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:31:01 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:31:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:31:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:31:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:31:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:31:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:31:01 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5e0292240fc682069ff7c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:31:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:31:01 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:31:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 13:31:01 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb94850fed6db51ff0ad"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:31:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:31:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:31:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:31:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:31:01 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:31:01 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:31:01 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:31:01 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:31:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:31:01 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:31:01 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:31:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:31:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:31:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:31:01 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:33:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:33:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:33:39 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:33:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:33:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:33:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:33:39 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:33:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:33:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:33:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:33:47 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:33:47 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:33:47 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:33:47 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:33:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:33:47 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:33:47 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:33:47 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:33:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:33:52 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:33:52 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:33:52 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:33:52 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:33:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:33:52 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:33:52 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:33:52 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:05 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:34:05 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:05 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:05 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:05 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:34:05 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:34:05 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:05 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:05 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:34:20 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:20 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:20 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:20 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:34:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:34:20 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:20 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:21 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:35 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:34:35 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:34:35 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:35 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:35 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:35 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:35 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:35 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:34:35 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:35 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:35 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:34:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:34:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:34:35 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:35 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:35 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:35 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:34:36 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:36 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:36 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:34:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:34:37 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:37 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:34:37 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:37 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:37 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:37 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:34:37 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:37 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:37 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:34:37 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:34:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:37 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:37 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:34:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:34:37 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:37 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:38 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:34:41 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:41 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:41 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:41 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:34:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:34:41 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:41 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:41 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:34:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:34:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:43 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:43 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:43 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:43 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:34:43 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:34:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:34:43 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:43 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:34:43 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:43 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:43 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:45 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:34:45 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:45 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:45 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:45 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:34:45 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:34:45 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:45 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:45 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/apprenants
2025-03-11 13:34:46 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:46 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:34:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:46 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:46 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:34:46 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:46 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:46 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:34:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:34:46 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:46 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:46 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:46 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:34:46 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:34:46 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 13:34:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:34:46 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:46 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:46 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:34:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:34:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:46 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:34:46 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:34:46 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:46 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:46 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:46 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:46 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:46 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:46 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:46 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb94850fed6db51ff0ad/classes
2025-03-11 13:34:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:34:46 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:34:46 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb94850fed6db51ff0ad"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:46 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:46 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:34:46 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5e0292240fc682069ff7c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:34:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:34:46 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:34:46 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:46 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:46 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:46 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:34:46 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:46 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:46 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:46 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:46 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67c5cb94850fed6db51ff0ad/archive
2025-03-11 13:34:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/67c5cb94850fed6db51ff0ad/archive
2025-03-11 13:34:51 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:51 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:51 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:51 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/users/67c5cb94850fed6db51ff0ad/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/67c5cb94850fed6db51ff0ad/archive
2025-03-11 13:34:51 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:51 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:51 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb94850fed6db51ff0ad"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:51 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, email, nom, prenom, password, role, active, classes, _class]
2025-03-11 13:34:51 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:53 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:34:53 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:53 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:53 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:53 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:34:53 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:34:53 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:53 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:53 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:34:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:34:54 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:54 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:54 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:54 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:54 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:34:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:34:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:34:54 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:34:54 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:54 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:34:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:34:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:34:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:34:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:34:54 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:34:54 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:54 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:54 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:54 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:54 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:54 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:54 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:54 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:54 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5e0292240fc682069ff7c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5e0292240fc682069ff7c/classes
2025-03-11 13:34:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:34:54 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:34:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:34:54 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:54 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:34:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:34:54 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:54 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:54 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:54 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:54 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:54 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:59 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67c5e0292240fc682069ff7c/archive
2025-03-11 13:34:59 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:59 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:34:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/67c5e0292240fc682069ff7c/archive
2025-03-11 13:34:59 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:34:59 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:34:59 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:59 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/users/67c5e0292240fc682069ff7c/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:34:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/67c5e0292240fc682069ff7c/archive
2025-03-11 13:34:59 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:59 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:34:59 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5e0292240fc682069ff7c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:34:59 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, email, nom, prenom, password, role, active, classes, _class]
2025-03-11 13:34:59 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:35:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:35:02 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:35:02 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:02 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:35:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:35:02 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:02 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:35:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:35:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:35:03 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:35:03 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:35:03 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:03 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:35:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:35:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:03 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:35:03 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:35:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:35:03 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:03 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:35:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:35:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:35:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:35:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:35:03 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:35:03 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:35:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:35:03 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:35:03 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:35:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:35:03 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:35:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:03 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:03 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:03 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:03 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:03 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:35:03 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:35:03 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:35:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:35:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:35:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:35:03 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:35:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:35:03 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:35:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:35:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:03 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:03 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:03 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:03 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:03 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:03 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:03 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:03 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:03 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:35:03 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:35:03 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:35:03 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:35:03 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:35:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:35:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:35:08 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:08 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:35:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:35:08 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:08 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:35:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:35:09 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:35:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:35:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:35:09 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:09 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:09 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:09 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:09 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:35:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:35:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:35:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:35:09 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:09 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:35:09 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:35:09 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:09 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:35:09 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:35:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:35:09 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:36:09 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:09 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:09 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:09 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:36:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:36:09 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:09 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:09 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:36:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:18 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:18 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:36:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:36:18 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:18 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:19 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:36:19 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:19 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:36:19 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:19 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:19 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:19 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:36:19 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:36:19 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:19 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:19 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:36:19 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:36:19 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:36:19 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:19 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:19 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:19 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:36:19 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:36:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:36:19 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:36:19 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:19 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:19 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:36:19 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:19 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:19 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:19 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:19 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:19 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:19 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:36:19 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:36:19 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:36:19 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:36:19 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:36:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:36:19 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:36:19 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:36:19 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:19 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:19 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:19 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:19 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:19 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:19 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:19 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:19 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8db11e810a574412afc22/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:36:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8db11e810a574412afc22/classes
2025-03-11 13:36:19 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:19 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:19 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:19 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:19 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:19 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:19 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:19 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67c8db11e810a574412afc22/archive
2025-03-11 13:36:30 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:30 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:30 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/67c8db11e810a574412afc22/archive
2025-03-11 13:36:30 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:30 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:30 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:30 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/users/67c8db11e810a574412afc22/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:36:30 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/67c8db11e810a574412afc22/archive
2025-03-11 13:36:30 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:30 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:30 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8db11e810a574412afc22"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:30 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, email, nom, prenom, password, role, active, classes, _class]
2025-03-11 13:36:30 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:34 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:36:34 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:34 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:34 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:36:34 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:36:34 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:34 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:35 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:36:35 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:35 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:35 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:35 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:36:35 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:36:35 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:35 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:35 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:36:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:36:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:36 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:36 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:36 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:36 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:36:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:36:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:36:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:36:36 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:36 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:36 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:36 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:36 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:36:36 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67c5bda9850fed6db51ff075/archive
2025-03-11 13:36:40 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:40 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/67c5bda9850fed6db51ff075/archive
2025-03-11 13:36:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:40 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:36:40 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/users/67c5bda9850fed6db51ff075/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:36:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/67c5bda9850fed6db51ff075/archive
2025-03-11 13:36:40 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:40 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:36:40 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5bda9850fed6db51ff075"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:36:40 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, email, nom, prenom, password, role, active, classes, _class]
2025-03-11 13:36:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:42 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:36:42 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:42 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:42 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:36:41Z. Current time: 2025-03-11T13:36:42Z, a difference of 1178 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:36:42 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:36:42 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:42 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:36:42 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:36:42 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:36:42 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:36:43 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:43 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:43 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:36:41Z. Current time: 2025-03-11T13:36:43Z, a difference of 2401 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:36:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:36:43 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:43 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:36:43 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:36:43 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:36:43 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:36:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:43 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:36:41Z. Current time: 2025-03-11T13:36:43Z, a difference of 2413 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:36:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:36:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:36:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:36:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:36:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:45 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:36:45 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:45 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:45 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:36:41Z. Current time: 2025-03-11T13:36:45Z, a difference of 4398 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:36:45 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:36:45 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:45 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:36:45 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:36:45 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:36:45 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:36:46 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:36:46 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:46 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:36:41Z. Current time: 2025-03-11T13:36:46Z, a difference of 5429 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:36:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:36:46 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:46 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:36:46 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:36:46 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:36:46 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:46 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:36:41Z. Current time: 2025-03-11T13:36:46Z, a difference of 5432 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:36:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:36:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:36:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:36:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:36:46 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:36:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:47 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:36:41Z. Current time: 2025-03-11T13:36:47Z, a difference of 6996 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:36:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-03-11 13:36:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:36:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [GET /error] with attributes [authenticated]
2025-03-11 13:36:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:36:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-03-11 13:36:51 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:51 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:36:51 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-03-11T13:36:41Z. Current time: 2025-03-11T13:36:51Z, a difference of 10232 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.redtrack.security.JwtService.extractAllClaims(JwtService.java:63)
	at com.redtrack.security.JwtService.extractClaim(JwtService.java:55)
	at com.redtrack.security.JwtService.extractUsername(JwtService.java:38)
	at com.redtrack.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:41)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-03-11 13:36:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-03-11 13:36:51 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:36:51 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:36:51 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Failed to authorize filter invocation [POST /error] with attributes [authenticated]
2025-03-11 13:36:51 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-03-11 13:36:51 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:03 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-11 13:37:03 [restartedMain] INFO  com.redtrack.RedtrackApplication - Starting RedtrackApplication using Java 17.0.12 on LAPTOP-ICGVSVEA with PID 31436 (C:\Users\ycode\Desktop\RedTrack\Back-end\target\classes started by ycode in C:\Users\ycode\Desktop\RedTrack\Back-end)
2025-03-11 13:37:03 [restartedMain] DEBUG com.redtrack.RedtrackApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-03-11 13:37:03 [restartedMain] INFO  com.redtrack.RedtrackApplication - The following 1 profile is active: "prod"
2025-03-11 13:37:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-11 13:37:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-11 13:37:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-11 13:37:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 101 ms. Found 5 MongoDB repository interfaces.
2025-03-11 13:37:06 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-11 13:37:06 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-11 13:37:06 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-11 13:37:06 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-11 13:37:06 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-11 13:37:06 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2644 ms
2025-03-11 13:37:06 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.12+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@54257c9f], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6c28bffc]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@4df9498e], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2025-03-11 13:37:06 [cluster-rtt-ClusterId{value='67d03c828eb9fb55ea6d8498', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:267}] to localhost:27017
2025-03-11 13:37:06 [cluster-ClusterId{value='67d03c828eb9fb55ea6d8498', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:266}] to localhost:27017
2025-03-11 13:37:06 [cluster-ClusterId{value='67d03c828eb9fb55ea6d8498', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20475500}
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.User for index information.
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Class for index information.
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Rendu for index information.
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.RenduResponse for index information.
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator - Analyzing class class com.redtrack.model.entities.Etape for index information.
2025-03-11 13:37:07 [restartedMain] DEBUG c.r.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-03-11 13:37:07 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public java.util.List com.redtrack.services.impl.ClassServiceImpl.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateFormateurClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDTO com.redtrack.services.impl.ClassServiceImpl.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public void com.redtrack.services.impl.ClassServiceImpl.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.ClassServiceImpl; public com.redtrack.dtos.classe.ClassDetailsDTO com.redtrack.services.impl.ClassServiceImpl.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.createClass(com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.unarchiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.archiveClass(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getArchivedClasses(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.ClassController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.ClassController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getClassDetails(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.auth.RegisterResponse com.redtrack.services.impl.UserServiceImpl.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.createApprenantInFormateurClass(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateApprenantByFormateur(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveApprenantByFormateur(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.getFormateurClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public com.redtrack.dtos.user.UserDTO com.redtrack.services.impl.UserServiceImpl.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public void com.redtrack.services.impl.UserServiceImpl.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on specific method: public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.UserServiceImpl; public java.util.List com.redtrack.services.impl.UserServiceImpl.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.register(com.redtrack.dtos.auth.RegisterRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenantsArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateursArchives(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.removeUserFromClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.unarchiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.updateUser(java.lang.String,com.redtrack.dtos.user.UpdateUserRequest)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.assignUserToClass(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ADMIN\')") found on: com.redtrack.controllers.admins.UserController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.admins.UserController; public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getClassUsers(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.EtapeServiceImpl; public java.util.List com.redtrack.services.impl.EtapeServiceImpl.getEtapesForCurrentApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.EtapeApprenantController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.EtapeApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.EtapeApprenantController.getEtapesForApprenant()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public java.util.List com.redtrack.services.impl.RenduServiceImpl.getEtapesAvecRendusByApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on specific method: public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduServiceImpl; public com.redtrack.dtos.rendu.RenduDTO com.redtrack.services.impl.RenduServiceImpl.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.getMesEtapesAvecRendus()]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'APPRENANT\')") found on: com.redtrack.controllers.apprenants.RenduController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.apprenants.RenduController; public org.springframework.http.ResponseEntity com.redtrack.controllers.apprenants.RenduController.createRendu(com.redtrack.dtos.rendu.RenduDTO)]] with attributes [[authorize: 'hasAuthority('APPRENANT')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getFormateurArchivedApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.getClassApprenants(org.springframework.data.domain.Pageable)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.unarchiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.createApprenant(com.redtrack.dtos.user.CreateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.archiveApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ApprenantsController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ApprenantsController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ApprenantsController.updateApprenant(java.lang.String,com.redtrack.dtos.user.UpdateApprenantRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.getFormateurClasses()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.ClassFormateurController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.ClassFormateurController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.ClassFormateurController.updateClass(java.lang.String,com.redtrack.dtos.classe.CreateClassRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.createEtape(com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.getAllEtapes()]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.EtapeController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.EtapeController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.EtapeController.updateEtape(java.lang.String,com.redtrack.dtos.etape.EtapeDTO)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public com.redtrack.dtos.rendu.RenduResponseDTO com.redtrack.services.impl.RenduResponseServiceImpl.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on specific method: public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.services.impl.RenduResponseServiceImpl; public java.util.List com.redtrack.services.impl.RenduResponseServiceImpl.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.createRenduResponse(java.lang.String,com.redtrack.dtos.rendu.CreateRenduResponseRequest)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRendusApprenant(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'FORMATEUR\')") found on: com.redtrack.controllers.formateurs.RenduApprenantController
2025-03-11 13:37:07 [restartedMain] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.redtrack.controllers.formateurs.RenduApprenantController; public org.springframework.http.ResponseEntity com.redtrack.controllers.formateurs.RenduApprenantController.getRenduResponses(java.lang.String)]] with attributes [[authorize: 'hasAuthority('FORMATEUR')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:08 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-11 13:37:08 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/api/auth/**']
2025-03-11 13:37:08 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('ADMIN')] for Ant [pattern='/api/admin/**']
2025-03-11 13:37:08 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('FORMATEUR')] for Ant [pattern='/api/formateur/**']
2025-03-11 13:37:08 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [hasAuthority('APPRENANT')] for Ant [pattern='/api/apprenant/**']
2025-03-11 13:37:08 [restartedMain] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-03-11 13:37:08 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@25ac22fe, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17e7fc29, org.springframework.security.web.context.SecurityContextPersistenceFilter@33edeba4, org.springframework.security.web.header.HeaderWriterFilter@220c04a7, org.springframework.web.filter.CorsFilter@2efde042, org.springframework.security.web.authentication.logout.LogoutFilter@275d41f7, com.redtrack.security.JwtAuthenticationFilter@278f090c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a985456, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7246d611, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@637f0522, org.springframework.security.web.session.SessionManagementFilter@1aa6f31b, org.springframework.security.web.access.ExceptionTranslationFilter@2e85f69d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@196474ef]
2025-03-11 13:37:08 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-11 13:37:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-11 13:37:08 [restartedMain] INFO  com.redtrack.RedtrackApplication - Started RedtrackApplication in 5.824 seconds (JVM running for 7.085)
2025-03-11 13:37:08 [restartedMain] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:08 [restartedMain] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:08 [restartedMain] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:268}] to localhost:27017
2025-03-11 13:37:09 [RMI TCP Connection(1)-192.168.8.249] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-11 13:37:09 [RMI TCP Connection(1)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-11 13:37:09 [RMI TCP Connection(1)-192.168.8.249] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2025-03-11 13:37:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-03-11 13:37:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-03-11 13:37:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [POST /api/auth/login] with attributes [permitAll]
2025-03-11 13:37:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-03-11 13:37:29 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:29 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:30 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-03-11 13:37:30 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:37:30 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:30 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:30 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:30 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:37:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:37:30 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:30 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:30 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:31 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:37:31 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:31 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:37:31 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:31 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:31 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:31 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:31 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:31 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:37:31 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:37:31 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:31 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:37:31 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:31 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:31 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:31 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:31 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:31 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:37:31 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:31 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:37:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:33 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:33 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:37:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:37:33 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:33 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:37:34 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:37:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:34 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:34 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:34 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:34 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:34 [http-nio-8080-exec-7] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:269}] to localhost:27017
2025-03-11 13:37:34 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:37:34 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:34 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:37:34 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:37:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:37:34 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:34 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:34 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:35 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:37:35 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:35 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:37:35 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:37:35 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:35 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:35 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:35 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:35 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:35 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:35 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:35 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:35 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:35 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:35 [http-nio-8080-exec-1] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:270}] to localhost:27017
2025-03-11 13:37:35 [http-nio-8080-exec-8] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:271}] to localhost:27017
2025-03-11 13:37:35 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:35 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:37:35 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:35 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:35 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:37:35 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c5cb9e850fed6db51ff0ae/classes
2025-03-11 13:37:35 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:35 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:35 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:35 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:35 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:35 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:35 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:35 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:35 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:35 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:35 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:35 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:35 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67c5cb9e850fed6db51ff0ae/archive
2025-03-11 13:37:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/67c5cb9e850fed6db51ff0ae/archive
2025-03-11 13:37:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:40 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:40 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/users/67c5cb9e850fed6db51ff0ae/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/67c5cb9e850fed6db51ff0ae/archive
2025-03-11 13:37:40 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:40 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:40 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c5cb9e850fed6db51ff0ae"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:40 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, email, nom, prenom, password, role, active, classes, _class]
2025-03-11 13:37:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:37:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:43 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:43 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:37:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:37:43 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:43 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:37:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:44 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:37:44 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:44 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:44 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:44 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:44 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:37:44 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:37:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:37:44 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:44 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:44 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:44 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:44 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:37:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:44 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:37:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:46 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:46 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:37:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:37:46 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:46 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:37:47 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:47 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:47 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:37:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:47 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:37:47 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:47 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:47 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:47 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:37:47 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:47 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:37:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:37:47 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:47 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:47 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:37:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:37:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:37:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:47 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:47 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:47 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:47 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:47 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:47 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:47 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:47 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:37:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:37:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:37:47 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:47 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:47 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:47 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:47 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:47 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:47 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:47 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:47 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:47 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:37:49 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:49 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:49 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:37:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:37:49 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:49 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:37:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:37:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:50 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:50 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:50 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:50 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:37:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:37:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:37:50 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:50 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:50 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:50 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:50 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:37:50 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67c83b114bd0bb4678decc8b/archive
2025-03-11 13:37:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/67c83b114bd0bb4678decc8b/archive
2025-03-11 13:37:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:54 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:54 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/users/67c83b114bd0bb4678decc8b/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/67c83b114bd0bb4678decc8b/archive
2025-03-11 13:37:54 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:54 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:54 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c83b114bd0bb4678decc8b"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:54 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, email, nom, prenom, password, role, active, classes, _class]
2025-03-11 13:37:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:37:56 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:56 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:37:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:37:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:56 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:37:58 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:37:58 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:58 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:58 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:58 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:58 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:58 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:37:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:37:58 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:37:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:37:58 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:58 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:58 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:37:58 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:58 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:37:58 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:58 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:58 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.UserException: Il n'existe aucun formateur]
2025-03-11 13:37:58 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:37:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:37:59 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:37:59 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:59 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:59 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:37:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:37:59 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:37:59 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:37:59 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:38:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:01 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:01 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:38:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:38:01 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:01 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:38:02 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:02 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:02 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:38:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:02 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:38:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:38:02 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:02 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:02 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:38:02 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:02 [http-nio-8080-exec-4] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.UserException: Il n'existe aucun formateur]
2025-03-11 13:38:02 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:38:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:38:02 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:02 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:02 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:38:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:04 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:04 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:38:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:38:04 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:04 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:38:05 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:38:05 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:05 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:05 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:05 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:05 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:05 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:38:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:38:05 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:05 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:05 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:38:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:38:05 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:38:05 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:05 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:05 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:05 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:05 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:38:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:38:05 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:05 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:05 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:38:05 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:05 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:05 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:05 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:05 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:05 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:05 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:05 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:38:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:38:05 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:38:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:38:05 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:38:05 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:38:05 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:05 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:05 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:05 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:05 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:05 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:05 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:05 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:05 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:05 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:05 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:05 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:07 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:38:07 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:07 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:07 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:07 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:38:07 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:38:07 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:07 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:07 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:38:08 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:38:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:08 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:08 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:08 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:08 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:08 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:38:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:38:08 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:08 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:38:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:38:08 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:38:08 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:08 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:08 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:08 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.UserException: Il n'existe aucun formateur]
2025-03-11 13:38:08 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:38:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:09 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:09 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:38:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:38:09 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:09 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/classes
2025-03-11 13:38:10 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:38:10 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:10 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:10 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:10 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:10 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:10 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:38:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:38:10 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:38:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/classes
2025-03-11 13:38:10 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:10 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:10 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.ClassController.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.ClassController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:10 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:10 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.ClassServiceImpl.getAllClasses(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.ClassServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:38:10 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "active" : true}, Fields: {}, Sort: {}
2025-03-11 13:38:10 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.Class in collection: classes
2025-03-11 13:38:10 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:38:13 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:38:13 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:38:13 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:13 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:13 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:38:13 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:38:13 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:38:13 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:38:13 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:39:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:39:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:39:51 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:39:51 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:39:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:39:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:39:51 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:39:51 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:39:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:40:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:40:00 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:40:00 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:00 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:00 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:40:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:40:00 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:00 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:00 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:40:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:40:08 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:40:08 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:08 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:08 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:40:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:40:08 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:08 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:08 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:40:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:40:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:40:15 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:15 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:40:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:40:15 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:15 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:40:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:40:19 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:40:19 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:40:19 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:40:19 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:19 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:19 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:19 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:40:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:40:19 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:40:19 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:40:19 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:40:19 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:19 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:40:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:40:19 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:19 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:19 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.UserException: Il n'existe aucun formateur]
2025-03-11 13:40:19 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:40:19 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:40:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:40:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:40:21 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:21 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:40:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:40:21 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:21 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:40:22 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:40:22 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:40:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:40:22 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:40:22 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:22 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:22 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:22 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:40:22 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:40:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:40:22 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:40:22 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:22 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:40:22 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:40:22 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:22 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:40:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:22 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:40:22 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:40:22 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:40:22 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:40:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:40:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:40:22 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:40:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:40:22 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:22 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:22 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:22 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:22 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:40:22 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:22 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:40:22 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:40:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:40:22 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:40:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:40:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:40:22 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:40:22 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:40:22 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:40:22 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:40:22 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:40:22 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:40:22 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:22 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:22 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:40:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:40:22 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:40:22 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:41:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:41:31 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:41:31 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:31 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:31 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:41:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:41:31 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:31 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:31 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:41:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:41:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:41:37 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:37 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:41:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:41:37 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:37 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:41:39 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:41:39 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:41:39 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:39 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:39 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:41:39 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:41:39 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:41:39 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:41:39 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:41:39 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:41:39 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:41:39 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:39 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:39 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:39 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.UserException: Il n'existe aucun formateur]
2025-03-11 13:41:39 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:41:39 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:41:39 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:41:39 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:39 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:39 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:41:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:41:42 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:41:42 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:42 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:42 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:41:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:41:42 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:42 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:42 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:41:43 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:41:43 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:41:43 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:43 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:43 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:41:43 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:41:43 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:41:43 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:41:43 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:41:43 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:41:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:41:43 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:43 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:41:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:41:43 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:43 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:41:43 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:41:43 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:41:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:41:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:41:43 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:41:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:41:43 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:41:43 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:43 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:43 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:43 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:43 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:43 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:41:43 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:41:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:41:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:41:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:41:43 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:41:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:41:43 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:41:43 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:43 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:43 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:41:43 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:41:43 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:41:43 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:41:43 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:41:43 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:41:43 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:41:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:41:58 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:41:58 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:58 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:58 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:41:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:41:58 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:41:58 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:41:58 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:42:05 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:05 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:05 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:05 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:42:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:42:05 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:05 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:05 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:42:06 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:42:06 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:06 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:06 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:06 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:06 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:06 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:42:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:42:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:42:06 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:42:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:42:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:42:06 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:06 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:42:06 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:06 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:06 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.UserException: Il n'existe aucun formateur]
2025-03-11 13:42:06 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:06 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:42:12 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:12 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:12 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:12 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:42:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:42:12 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:12 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:12 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:42:13 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:13 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:42:13 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:13 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:13 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:13 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:13 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:13 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:42:13 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:42:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:42:13 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:42:13 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:13 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:42:13 [http-nio-8080-exec-5] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:42:13 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:13 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:42:13 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:13 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:13 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:42:13 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:42:13 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:42:13 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:13 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:13 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:13 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:13 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:13 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:13 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:13 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:13 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:13 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:42:13 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:42:13 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:42:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:42:13 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:42:13 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:42:13 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:42:13 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:42:13 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:42:13 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:42:13 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:42:13 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:13 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:13 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:42:13 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:13 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:13 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:13 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:42:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:25 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:25 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:42:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:42:25 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:25 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:42:49 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:49 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:49 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:42:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:42:49 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:49 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:42:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:42:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:42:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:53 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:42:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:56 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:56 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:42:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:42:56 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:56 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/formateurs
2025-03-11 13:42:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:59 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:59 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:42:59 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:42:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/formateurs] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:42:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/formateurs
2025-03-11 13:42:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:42:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listFormateurs(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:42:59 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:59 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : FORMATEUR }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:42:59 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:59 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "FORMATEUR", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:59 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.redtrack.exceptions.UserException: Il n'existe aucun formateur]
2025-03-11 13:42:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:42:59 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:42:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:42:59 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:42:59 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:42:59 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:43:00 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:00 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:00 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:00 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:43:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:43:00 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:00 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:00 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:01 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:43:01 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:43:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:01 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:01 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:01 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:43:01 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:43:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:43:01 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:43:01 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:01 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:01 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:01 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:43:01 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:02 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:43:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:43:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:43:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:02 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:02 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:02 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:02 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:02 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:02 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:02 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:02 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:02 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:43:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8d966e810a574412afc1e/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:43:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:43:02 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:43:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8d966e810a574412afc1e/classes
2025-03-11 13:43:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:43:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:02 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:02 [http-nio-8080-exec-1] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:02 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:02 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:02 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:02 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:02 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/admin/users/67c8d966e810a574412afc1e/archive
2025-03-11 13:43:06 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:06 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/67c8d966e810a574412afc1e/archive
2025-03-11 13:43:06 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:06 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:06 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:06 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [PUT /api/admin/users/67c8d966e810a574412afc1e/archive] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:43:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/67c8d966e810a574412afc1e/archive
2025-03-11 13:43:06 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.archiveUser(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:06 [http-nio-8080-exec-9] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public void com.redtrack.services.impl.UserServiceImpl.archiveUser(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:06 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8d966e810a574412afc1e"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:06 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, email, nom, prenom, password, role, active, classes, _class]
2025-03-11 13:43:06 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:43:07 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:07 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:07 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:43:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:43:07 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:07 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/apprenants
2025-03-11 13:43:08 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:43:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:08 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:08 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:08 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:08 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:08 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/apprenants] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:43:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:43:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/apprenants
2025-03-11 13:43:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:43:08 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:08 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:08 [http-nio-8080-exec-7] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.redtrack.services.impl.UserServiceImpl.listApprenants(org.springframework.data.domain.Pageable); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:08 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:08 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "role" : { "$java" : APPRENANT }, "active" : true }, Fields: {}, Sort: {}
2025-03-11 13:43:08 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "role" : "APPRENANT", "active" : true} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:08 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:43:08 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:43:08 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:08 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:08 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:08 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:08 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:08 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67c8de06e810a574412afc39/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:43:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67c8de06e810a574412afc39/classes
2025-03-11 13:43:08 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes] with attributes [hasAuthority('ADMIN')]
2025-03-11 13:43:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/67cacd308f86cb5fc4fdb25c/classes
2025-03-11 13:43:08 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:08 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.redtrack.controllers.admins.UserController.getUserClasses(java.lang.String); target is of class [com.redtrack.controllers.admins.UserController] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:08 [http-nio-8080-exec-8] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:08 [http-nio-8080-exec-10] DEBUG o.s.s.a.i.a.MethodSecurityInterceptor - Authorized ReflectiveMethodInvocation: public java.util.List com.redtrack.services.impl.UserServiceImpl.getUserClasses(java.lang.String); target is of class [com.redtrack.services.impl.UserServiceImpl] with attributes [[authorize: 'hasAuthority('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-03-11 13:43:08 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67cacd308f86cb5fc4fdb25c"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:08 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "67c8de06e810a574412afc39"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:08 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:08 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:43:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:20 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:20 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:43:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:43:20 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:20 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-03-11 13:43:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/profile
2025-03-11 13:43:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-03-11 13:43:26 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:26 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.i.FilterSecurityInterceptor - Authorized filter invocation [GET /api/auth/profile] with attributes [permitAll]
2025-03-11 13:43:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/profile
2025-03-11 13:43:26 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "admin@redtrack.com"}, Fields: {}, Sort: {}
2025-03-11 13:43:26 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "admin@redtrack.com"} fields: Document{{}} for class: class com.redtrack.model.entities.User in collection: users
2025-03-11 13:43:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
